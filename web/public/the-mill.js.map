{"version":3,"file":"the-mill.js","sources":["../node_modules/lit-html/lib/dom.js","../node_modules/lit-html/lib/template.js","../node_modules/lit-html/lib/modify-template.js","../node_modules/lit-html/lib/directive.js","../node_modules/lit-html/lib/part.js","../node_modules/lit-html/lib/template-instance.js","../node_modules/lit-html/lib/template-result.js","../node_modules/lit-html/lib/parts.js","../node_modules/lit-html/lib/template-factory.js","../node_modules/lit-html/lib/render.js","../node_modules/lit-html/lib/default-template-processor.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-html/lib/shady-render.js","../node_modules/lit-element/lib/updating-element.js","../node_modules/lit-element/lib/css-tag.js","../node_modules/lit-element/lit-element.js","../node_modules/organismus/dist/index.js","../node_modules/pure-lit/dist/properties.js","../node_modules/pure-lit/dist/pure-lit.js","../src/arrays/index.ts","../src/math/cube/cube.ts","../src/math/position.ts","../src/math/guid.ts","../src/game/player/buildings/Castles.ts","../src/game/player/load.ts","../src/game/world/buildings.ts","../src/game/world/terrain.ts","../src/game/world/worldLoader.ts","../src/game/world/types.ts","../src/math/pathfinder/heapify.ts","../src/math/pathfinder/a.ts","../src/game/world/events.ts","../src/game/player/dices/index.ts","../src/game/player/knights/Knight.ts","../src/game/world/navigator.ts","../src/browser/Selector.ts","../src/game/player/wagon/Wagon.ts","../src/game/world/world-state.ts","../src/game/player/Assets.ts","../src/game/player/dices/Dices.ts","../src/game/world/index.ts","../src/assets/styles.ts","../src/assets/elements/button/ImageButton.ts","../src/assets/elements/button/Button.ts","../src/assets/elements/modal/modal.styles.ts","../src/assets/elements/modal/modal.ts","../node_modules/lit-element-state-decoupler/dist/clone.js","../node_modules/lit-element-state-decoupler/dist/decorator.js","../node_modules/lit-element-state-decoupler/dist/state.js","../node_modules/lit-element-state-decoupler/dist/reducer.js","../node_modules/lit-element-state-decoupler/dist/index.js","../src/assets/elements/modal/modalContainer.ts","../src/assets/elements/text/Text.ts","../src/assets/elements/loading-bar/index.ts","../src/assets/elements/loading-bar/loading-bar.styles.ts","../src/assets/elements/dice/dice.ts","../src/assets/elements/dice/dice.style.ts","../src/assets/player/knight.ts","../src/assets/player/wagon.ts","../src/assets/player/dice/index.ts","../node_modules/lit-html/directives/unsafe-html.js","../node_modules/lit-element-effect/dist/decorator.js","../node_modules/lit-element-effect/dist/effect.js","../node_modules/lit-element-effect/dist/index.js","../src/assets/sprites.ts","../src/assets/player/fighter-info.ts","../src/assets/map/consts.ts","../src/assets/map/Hexagon.styles.ts","../src/assets/map/Hexagon.ts","../src/assets/map/Hexagon.movement.ts","../src/assets/map/Hexagon.battle.ts","../src/assets/map/World.ts","../src/assets/buildings/mill.ts","../src/assets/buildings/castle-small.ts","../src/game/player/costs.ts","../src/assets/sidebar/selectedCastle.ts","../src/math/number.ts","../src/assets/sidebar/selectedKnight.ts","../src/assets/sidebar/selectedWagon.ts","../src/assets/sidebar/sidebar.ts","../node_modules/@open-wc/testing-helpers/src/fixtureWrapper.js","../node_modules/@open-wc/testing-helpers/src/lit-html.js","../node_modules/@open-wc/testing-helpers/src/lib.js","../node_modules/@open-wc/dedupe-mixin/src/dedupeMixin.js","../node_modules/@open-wc/scoped-elements/src/Cache.js","../node_modules/@open-wc/scoped-elements/src/createUniqueTag.js","../node_modules/@open-wc/scoped-elements/src/globalTagsCache.js","../node_modules/@open-wc/scoped-elements/src/registerElement.js","../node_modules/@open-wc/scoped-elements/src/transform.js","../node_modules/@open-wc/scoped-elements/src/shadyTemplateFactory.js","../node_modules/@open-wc/scoped-elements/src/ScopedElementsMixin.js","../node_modules/@open-wc/testing-helpers/src/scopedElementsWrapper.js","../node_modules/@open-wc/testing-helpers/src/fixture.js","../src/assets/modals/Battle.ts","../src/assets/modals/DiceResult.ts","../src/assets/modals/MillTaken.ts","../src/assets/modals/NoMoreTurns.ts","../src/assets/modals/index.ts","../src/assets/footer/index.ts","../src/assets/resources/base.ts","../src/assets/resources/grain.ts","../src/assets/resources/stone.ts","../src/assets/resources/iron.ts","../src/assets/resources/log.ts","../src/assets/resources/hay.ts","../src/assets/resources/ResourceCounter.ts","../src/assets/header/index.ts","../src/assets/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this\n                    .requestUpdateInternal(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._updateState = 0;\n        this._updatePromise =\n            new Promise((res) => this._enableUpdatingResolver = res);\n        this._changedProperties = new Map();\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdateInternal();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This protected version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    requestUpdateInternal(name, oldValue, options) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            options = options || ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this.requestUpdateInternal(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this._hasRequestedUpdate) {\n            return;\n        }\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `supportsAdoptingStyleSheets` is true then we assume\n            // CSSStyleSheet is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets, unsafeCSS } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.4.0');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = userStyles === undefined ? [] : [userStyles];\n        }\n        // Ensure that there are no invalid CSSStyleSheet instances here. They are\n        // invalid in two conditions.\n        // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n        //     this is impossible to check except via .replaceSync or use\n        // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n        //     false)\n        this._styles = this._styles.map((s) => {\n            if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n                // Flatten the cssText from the passed constructible stylesheet (or\n                // undetectable non-constructible stylesheet). The user might have\n                // expected to update their stylesheets over time, but the alternative\n                // is a crash.\n                const cssText = Array.prototype.slice.call(s.cssRules)\n                    .reduce((css, rule) => css + rule.cssText, '');\n                return unsafeCSS(cssText);\n            }\n            return s;\n        });\n    }\n    /**\n     * Performs element initialization. By default this calls\n     * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n     * captures any pre-set values for registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot = this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the [[`styles`]]\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `NodePart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Reference to the underlying library method used to render the element's\n * DOM. By default, points to the `render` method from lit-html's shady-render\n * module.\n *\n * **Most users will never need to touch this property.**\n *\n * This  property should not be confused with the `render` instance method,\n * which should be overridden to define a template for the element.\n *\n * Advanced users creating a new base class based on LitElement can override\n * this property to point to a custom render method with a signature that\n * matches [shady-render's `render`\n * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n *\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","const e = {}; var o; !function (e) { e[e.SILENT = 0] = \n    \"SILENT\", e[e.ERROR = 1] = \"ERROR\", e[e.INFO = 80] = \"INFO\", e[e.DEBUG = 90] = \"DEBUG\", e[e.TRACE = 100] = \"TRACE\" }(o || (o = {})); let n = o.SILENT; const r = e => n = e; let t = []; const s = (e, r, ...s) => { t.forEach(n => n(o.ERROR, e, r, ...s)), n >= o.ERROR && console.error(r, e, ...s) }, a = (e, r, ...s) => { if (t.forEach(n => n(o.INFO, e, r, ...s)), n >= o.INFO) { (n === o.TRACE ? console.trace : console.log)(r, e, ...s) } }, i = (e, r, ...s) => { if (t.forEach(n => n(o.DEBUG, e, r, ...s)), n >= o.DEBUG) { (n === o.TRACE ? console.trace : console.log)(r, e, ...s) } }, c = { queue: {}, list: {} }; function l(e) { return e.reduce((e, o) => `${e};${o.name};`, \"\") } const d = new class { constructor() { this.actionDictionary = {} } on(e, o) { if (Array.isArray(e)) { const n = l(e); if (c.list[n]) throw s(\"Hypothalamus.on\", new Error(\"Cannot register the same list of hormones twice\"), n), new Error(\"Cannot register the same list of hormones twice\"); a(\"[Hypothalamus.on] Adding new action when all in a list of hormones are released\", n, e), c.list[n] = { hormones: [...e], callback: o } } else a(\"Hypothalamus.on\", \"Adding new action when a hormone is released\", e.name), this.actionDictionary[e.name] = this.actionDictionary[e.name] || [], this.actionDictionary[e.name].push(o) } drop(e) { Array.isArray(e) ? (i(\"Hypothalamus.drop\", \"Dropping a list of hormones\", l(e), e), delete c.queue[l(e)], delete c.list[l(e)]) : (i(\"Hypothalamus.drop\", \"Dropping a hormone\", e.name), this.actionDictionary[e.name] = []) } dropAll() { i(\"Hypothalamus.dropAll\", \"Dropping all hormones\"), this.actionDictionary = {}, c.queue = {}, c.list = {} } orchestrate(e, o) { this.actionDictionary[e.name] && this.actionDictionary[e.name].forEach(e => e(o)); const n = Object.keys(c.queue).filter(o => o.indexOf(`;${e.name};`) > -1), r = Object.keys(c.list).filter(o => o.indexOf(`;${e.name};`) > -1 && n.every(e => e !== o)); r.forEach(e => { c.queue[e] = { hormones: [...c.list[e].hormones], values: {}, callback: c.list[e].callback } }); const t = [...new Set([...n, ...r])]; for (let n = 0; n < t.length; n++) { const r = t[n]; c.queue[r].hormones = c.queue[r].hormones.filter(o => o.name !== e.name), c.queue[r].values[e.name] = o, c.queue[r].hormones.length < 1 && (c.queue[r].callback(c.queue[r].values), delete c.queue[r]) } } }; function m(e, o = {}) { return h(e, Object.assign(Object.assign({}, o), { readOnce: !0 })) } function h(o, n = {}) { if (e[o] && !n.loadIfExists) throw s(\"hormone.defineHormone\", new Error(\"Hormone already created\"), o), new Error(\"Hormone already created\"); if (e[o] && n.loadIfExists) return i(\"hormone.defineHormone\", \"Hormone already created, reusing existing\", o), { name: o }; const { defaultValue: r, transformation: t, readOnce: a } = n; return e[o] = { name: o, value: r, defaultValue: r, transformation: t, receptors: [], readOnce: null != a && a }, { name: o } } async function u(o, n) { if (!o) throw s(\"hormone.releaseHormone\", new Error(\"Hormone cannot be undefined\")), new Error(\"Hormone cannot be undefined\"); const { name: r } = o; if (!e[r]) throw s(\"hormone.releaseHormone\", new Error(\"Hormone does not exist\"), r), new Error(\"Hormone does not exist\"); var t; t = n, e[r].value = (void 0 === t || t instanceof Function) && n ? n(e[r].value) : n, a(\"hormone.releaseHormone\", \"Releasing passed hormone\", r, e[r].value); const { receptors: c, transformation: l } = e[r]; l && l(e[r].value); const m = e[r].value; return d.orchestrate({ name: r }, m), await Promise.all(c.filter(e => { const o = void 0 === e.onlyIf || e.onlyIf(m); return i(\"hormone.releaseHormone\", o ? \"Keeping receptor because condition matched or no condition\" : \"Filtered receptor from the triggers because condition not matched\", e), o }).map(e => (null == e ? void 0 : e.onTriggered) ? null == e ? void 0 : e.onTriggered(m) : m)), e[r].readOnce && (i(\"hormone.releaseHormone\", \"Resetting hormone because it is readOnce\", r), e[r].value = e[r].defaultValue), Object.assign({}, e[r]) } function p(r, { name: i }, c, l) { const d = null != l ? l : c, m = l ? c : void 0; if (!e[i]) throw s(\"receptor.useReceptor\", new Error(\"Hormone is not defined\"), i), new Error(`Hormone \"${i}\" is not defined`); ((o, n, r) => { const t = (null == r ? void 0 : r.toString()) || n; return !e[n].receptors.some(e => e.parent === o && e.key === t) })(r, i, m) ? (a(\"receptor.useReceptor\", \"Pushing new receptor to hormone\", i, { parent: r }), e[i].receptors.push({ key: (null == m ? void 0 : m.toString()) || i, parent: r, onlyIf: m, onTriggered: d }), void 0 !== e[i].value ? d(e[i].value) : void 0 !== e[i].defaultValue && d(e[i].defaultValue)) : ((e, r, ...s) => { t.forEach(n => n(o.TRACE, e, r, ...s)), n === o.TRACE && console.trace(r, e, ...s) })(\"receptor.useReceptor\", \"Receptor not pushed because already subscribed\", i, { parent: r }) } export { o as LOGLEVEL, h as defineHormone, m as defineSingleHormone, d as hypothalamus, u as releaseHormone, r as setLoglevel, p as useReceptor };\n","export function getType(value) {\n    if (typeof value === \"boolean\")\n        return { type: Boolean };\n    if (Array.isArray(value))\n        return { type: Array };\n    if (typeof value === \"object\")\n        return { type: Object };\n    return {};\n}\nexport const toTypeDeclaration = (object) => Object.entries(object).reduce((result, [key, value]) => {\n    result[key] = getType(value);\n    return result;\n}, {});\nexport const toPropertyDeclaration = (defaults) => toTypeDeclaration(defaults || {});\nexport const toPropertyDeclarationMap = (props) => (props || []).reduce((declaration, prop) => {\n    Object.entries(prop).forEach(([key, value]) => (declaration[key] = value));\n    return declaration;\n}, {});\nexport const isDefault = (args) => args !== undefined && args.defaults !== undefined;\nexport const hasProps = (args) => args !== undefined && args.props !== undefined;\nexport const toProperties = (args) => hasProps(args) ? toPropertyDeclarationMap(args.props) : toPropertyDeclaration(args === null || args === void 0 ? void 0 : args.defaults);\n//# sourceMappingURL=properties.js.map","import { LitElement } from \"lit-element\";\nimport { toProperties, isDefault } from \"./properties\";\nexport const registered = {};\nexport const pureLit = (name, render, args) => {\n    if (registered[name])\n        return registered[name];\n    class RuntimeRepresentation extends LitElement {\n        static get properties() {\n            return toProperties(args);\n        }\n        static get styles() {\n            /* istanbul ignore next */\n            return args === null || args === void 0 ? void 0 : args.styles;\n        }\n        constructor() {\n            super();\n            if (isDefault(args)) {\n                Object.entries(args.defaults).forEach(([key, value]) => {\n                    this[key] = value;\n                });\n            }\n        }\n        render() {\n            return render(this);\n        }\n    }\n    customElements.define(name, RuntimeRepresentation);\n    const element = document.createElement(name);\n    registered[name] = element;\n    return element;\n};\n//# sourceMappingURL=pure-lit.js.map","export function range(start: number, end: number): number[] {\n    return Array.from({ length: end - start + 1 }, (_, i) => i);\n  }\n  ","import { range as r } from \"../../arrays\";\nimport { Position } from \"../position\";\n\nexport class Cube {\n  equals(other: Cube) {\n    return other !== null &&\n      this.x === other.x &&\n      this.y === other.y &&\n      this.z === other.z\n  }\n  add(transpose: Cube) {\n    const { x, y, z } = this;\n    return new Cube(x + transpose.x, y + transpose.y, z + transpose.z);\n  }\n  remove(cube: Cube) {\n    const { x, y, z } = this;\n    return new Cube(x - cube.x, y - cube.y, z - cube.z);\n  }\n  vector(to: Cube) {\n    return new Cube(\n      to.x - this.x,\n      to.y - this.y,\n      to.z - this.z,\n    )\n  }\n\n  distance(other: Cube) {\n    return Math.max(\n      Math.abs(this.x - other.x),\n      Math.abs(this.y - other.y),\n      Math.abs(this.z - other.z)\n    );\n  }\n  heuristic(other: Cube) {\n    return Math.abs(this.x - other.x) +\n      Math.abs(this.y - other.y) +\n      Math.abs(this.z - other.z)\n  }\n\n  range(distance: number) {\n    const results: Cube[] = [];\n    for (let x = -distance; x <= distance; x++) {\n      for (\n        let y = Math.max(-distance, -x - distance);\n        y <= Math.min(distance, -x + distance);\n        y++\n      ) {\n        results.push(this.add(new Cube(x, y, -x - y)));\n      }\n    }\n    return results;\n  }\n\n  direction(direction: number) {\n    return cubeDirections[direction];\n  }\n\n  directionTo(neighbor: Cube): Cube | null {\n    const dir = r(0, 5)\n      .find((dir) => this.neighbor(dir).equals(neighbor))\n    return (dir !== undefined && dir >= 0) ? this.direction(dir) : null;\n  }\n\n  neighbor(direction: number) {\n    return this.add(this.direction(direction));\n  }\n\n  neighbors(map: Cube[]) {\n    return r(0, 5)\n      .map((dir) => this.neighbor(dir))\n      .filter(neighbor => map.some(cube => cube.equals(neighbor)));\n  }\n\n  ring(radius: number) {\n    const results: Cube[] = []\n    const negRadius = radius * -1\n    // var results = []\n    for (const x of r(negRadius, radius)) {\n      for (const y of r(Math.max(negRadius, (x * -1) - negRadius), Math.min(radius, (x * -1) + radius))) {\n        const z = -x - y;\n        results.push(this.add(new Cube(x, y, z)))\n      }\n    }\n    return results\n  }\n\n  cost() {\n    return this.costs;\n  }\n\n  toPosition() {\n    //const col = this.x;\n    //const row = this.z + (this.x + (this.x & 1)) / 2;\n    const col = this.x + (this.z + (this.z & 1)) / 2\n    const row = this.z\n    return new Position(row, col);\n  }\n\n  toCoords() {\n    return this.toPosition().toCoords();\n  }\n\n  toString() {\n    return `${this.x}:${this.y}:${this.z}`\n  }\n\n  constructor(public x: number, public y: number, public z: number, public costs = 1) { }\n}\n\nconst cubeDirections = [\n  new Cube(+1, -1, 0),\n  new Cube(+1, 0, -1),\n  new Cube(0, +1, -1),\n  new Cube(-1, +1, 0),\n  new Cube(-1, 0, +1),\n  new Cube(0, -1, +1),\n];\n","import {Cube} from './cube/cube';\nimport {range as r} from '../arrays';\nimport { SimpleCoords } from '../game';\n\nexport interface Coords {\n  row: number;\n  col: number;\n}\nexport interface FuzzyCoords {\n  row?: number;\n  col?: number;\n}\n\nexport function overlappingCoord(a: Coords, b: FuzzyCoords | null) {\n  if (!b) return false;\n  if (a.col === b.col || !b.col) {\n    if (a.row === b.row) return true;\n  }\n  if (a.row === b.row || !b.row) {\n    if (a.col === b.col) return true;\n  }\n\n  return false;\n}\n\nexport function euclidPointDistance(a: Coords, b: Coords) {\n  return Math.sqrt(Math.pow(b.col - a.col, 2) + Math.pow(b.row - a.row, 2));\n}\n\nexport function manhattanPointDistance(a: Coords, b: Coords) {\n  return Math.abs(Math.abs(a.col - b.col) + Math.abs(a.row - b.row));\n}\n\n\nconst neigboursMaps = {\n  manhattan: [\n    { row: +0, col: -1 },\n    { row: +1, col: +0 },\n    { row: +0, col: +1 },\n    { row: -1, col: +0 },\n  ],\n  euclid: [\n    { row: +1, col: -1 },\n    { row: -1, col: +1 },\n    { row: +1, col: +0 },\n    { row: +0, col: +1 },\n    { row: -1, col: +0 },\n    { row: +0, col: -1 },\n    { row: -1, col: -1 },\n    { row: +1, col: +1 },\n  ]\n}\n\nexport const SimpleCoordsEquals = (a: SimpleCoords, b: SimpleCoords) =>\n  a.col.toString() === b.col.toString() && a.row.toString() === b.row.toString()\n\nexport class Position implements Coords {\n  vector(to: Position) {\n    return new Position(to.row - this.row, to.col - this.col);\n  }\n  toCube() {\n    //const x = this.col;\n    //const z = this.row - (this.col + (this.col & 1)) / 2;\n    //const y = -x - z;\n    const x = this.col - (this.row + (this.row&1)) / 2\n    const z = this.row\n    const y = -x - z;\n    return new Cube(x, y, z);\n  }\n\n  toCoords() {\n    const {row, col} = this;\n    return {col, row};\n  }\n\n  neighbor(direction: number) {\n    const neighbour = p(neigboursMaps[this.system][direction]);\n    neighbour.system = this.system;\n    return this.add(neighbour);\n  }\n\n  neighbors() {\n    return r(0, neigboursMaps[this.system].length - 1).map((dir) => this.neighbor(dir));\n  }\n\n  distance(other: Position) {\n    return euclidPointDistance(this, other);\n  }\n  manhattanDistance(other: Position) {\n    return manhattanPointDistance(this, other);\n  }\n\n  add(transpose: Position) {\n    const {col, row} = this;\n    return new Position(row + transpose.row, col + transpose.col, this.system);\n  }\n  remove(prevPosition: Position) {\n    const {col, row} = this;\n    return new Position(row - prevPosition.row, col - prevPosition.col, this.system);\n  }\n\n  equals(other?: Position | null) {\n    return (other !== undefined && other !== null) && other.col.toString() === this.col.toString() && other.row.toString() === this.row.toString();\n  }\n\n  toString() {\n    return `${this.col}:${this.row}`;\n  }\n\n  toEuclidPosition() {\n    return new Position(this.row, this.col, \"euclid\");\n  }\n  toManhattanPosition() {\n    return new Position(this.row, this.col, \"manhattan\");\n  }\n\n  static fromString(val?: string | null) {\n    if (!val) return null;\n    const [col, row] = val.split(':').map((i) => parseInt(i, 10));\n    return new Position(row, col);\n  }\n\n  constructor(\n    public row: number,\n    public col: number,\n    public system: \"manhattan\" | \"euclid\" = \"manhattan\"\n  ) {}\n}\n\nexport const p = ({row, col}: {row: number; col: number}) =>\n  new Position(row, col);\n\nexport const positionFromAnyPosition = ({\n  row,\n  col,\n}: {\n  row: number;\n  col: number;\n}) => new Position(row, col);\n\n\n","export function generateUUID() { // Public Domain/MIT\n    var d = new Date().getTime();//Timestamp\n    var d2 = (performance && performance.now && (performance.now()*1000)) || 0; //Time in microseconds since page-load or 0 if unsupported\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random() * 16;//random number between 0 and 16\n        if(d > 0){//Use timestamp until depleted\n            r = (d + r)%16 | 0;\n            d = Math.floor(d/16);\n        } else {//Use microseconds since page-load if supported\n            r = (d2 + r)%16 | 0;\n            d2 = Math.floor(d2/16);\n        }\n        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n}","import { SpriteSet } from \"../../world/sprite\";\n\nexport const SmallCastle: SpriteSet = {\n    id: \"building-castle-small\",\n    occurences: {\n        min: 1\n    }\n}","import { PlayerAsset } from \"..\";\nimport { generateUUID } from \"../../math/guid\";\nimport { Team } from \"../world\";\nimport { SmallCastle } from \"./buildings/Castles\"\n\ntype Props = {\n    rows: number,\n    cols: number\n}\nconst region: {[key:string]: (array: PlayerAsset[][]) => number} = {\n    \"green\": (array) => \n        Math.max(array.length * 0.75,  Math.round(Math.random() * (array.length - 1))),\n    \"red\": (array) => \n    Math.min(array.length * 0.25, Math.round(Math.random() * (array.length - 1)))\n}\n\nexport const getPlayerStartAssets = (team: Team, props: Props) => {\n    const arrayForBuildings: PlayerAsset[][] = new Array(props.rows * props.cols).map(() => []);\n    ([SmallCastle]).forEach(building => {\n        let buildings =\n            building.occurences.factor\n                ? Math.max(building.occurences.min, arrayForBuildings.length / building.occurences.factor)\n                : building.occurences.min\n        while (buildings > 0) {\n            const nextIndex = region[team](arrayForBuildings)\n            arrayForBuildings[nextIndex] = [\n                ...(arrayForBuildings[nextIndex] ?? []),\n                { name: building.id, team, id: generateUUID() }\n            ]\n            buildings--\n        }\n    })\n    return arrayForBuildings;\n}\n\nexport const getPlayerStartResources = () => {\n    return [SmallCastle]\n}","import { generateUUID } from \"../../math/guid\"\nimport { SpriteSet } from \"./sprite\"\nimport { Asset } from \"./types\"\n\nexport const Mill: SpriteSet = {\n    id: \"building-mill\",\n    occurences: {\n        min: 1\n    }\n}\n\ntype DistributedSpriteSet = SpriteSet & {\n    min: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9,\n    max: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10\n}\n\nfunction isDistributedSpriteSet(sprite: SpriteSet): sprite is DistributedSpriteSet {\n    return sprite !== undefined && (sprite as DistributedSpriteSet).max > 0\n}\n\ntype BuildingAsset = Asset\n\nconst buildings: SpriteSet[] | DistributedSpriteSet[] = [\n    {...Mill, min: 0, max: 2},\n    {...Mill, min: 8, max: 10},\n]\n\ntype Props = {\n    rows: number,\n    cols: number\n}\n\nconst lazyRandom = (size: number) => Math.round(Math.random() * (size - 1))\n\nexport const getRandomLocation = ({min, max}: DistributedSpriteSet, rows: number, cols: number) => {\n    const rel = (number: number) => rows * cols * (number / 10)\n    return Math.floor(Math.random() * (rel(max) - rel(min)) + rel(min))\n}\n\nexport const getBuildingsForMap = (props: Props) => {\n    const arrayForBuildings: BuildingAsset[][] = new Array(props.rows * props.cols).map(() => [])\n    buildings.forEach(building => {\n        let buildings =\n            building.occurences.factor\n                ? Math.max(building.occurences.min, arrayForBuildings.length / building.occurences.factor)\n                : building.occurences.min\n        while (buildings > 0) {\n            const position = isDistributedSpriteSet(building) \n                ? getRandomLocation(building, props.rows, props.cols)\n                : lazyRandom(arrayForBuildings.length)\n            arrayForBuildings[position] = [\n                ...(arrayForBuildings[position] ?? []),\n                { name: building.id, id: generateUUID() }\n            ]\n            buildings--\n        }\n    })\n    return arrayForBuildings;\n}","import { Sprite } from \"./sprite\"\n\nexport type Terrain = {\n    sprite: Sprite, \n    movementCosts: number | undefined,\n    defense: number\n}\n\nexport const TerrainPresets: {[key:string]: Terrain} = {\n    \"gras\" : {\n        sprite: {\n            file: \"hexagonTerrain_sheet\",\n            x: 414,\n            y: 1906\n        },\n        movementCosts: 1,\n        defense: 0\n    },\n    \"desert\" : {\n        sprite: {\n            file: \"hexagonTerrain_sheet\",\n            x: 902,\n            y: 627\n        },\n        movementCosts: 4,\n        defense: 0\n    },\n    \"mud\" : {\n        sprite: {\n            file: \"hexagonTerrain_sheet\",\n            x: 658,\n            y: 912\n        },\n        movementCosts: 4,\n        defense: 1\n    },\n    \"muddyHills\" : {\n        sprite: {\n            file: \"hexagonTerrain_sheet\",\n            x: 780,\n            y: 627\n        },\n        movementCosts: 8,\n        defense: 3\n    },\n    \"forest\" : {\n        sprite: {\n            file: \"hexagonTerrain_sheet\",\n            x: 536,\n            y: 912\n        },\n        movementCosts: 8,\n        defense: 3\n    },\n    \"mountain\" : {\n        sprite: {\n            file: \"hexagonTerrain_sheet\",\n            x: 414,\n            y: 1052\n        },\n        movementCosts: 10,\n        defense: 9\n    }\n}\n\nexport const randomTerrain = () => {\n    const keys = Object.keys(TerrainPresets)\n    return TerrainPresets[keys[Math.floor(Math.random() * (keys.length - 1))]]\n}","import { defineHormone, releaseHormone } from \"organismus\";\nimport { range } from \"../../arrays\";\nimport { Position } from \"../../math/position\";\nimport { getPlayerStartAssets } from \"../player/load\";\nimport { getBuildingsForMap } from \"./buildings\";\nimport { randomTerrain, Terrain } from \"./terrain\";\nimport { Asset, Team } from \"./types\";\n\ntype Props = {\n    rows: number,\n    cols: number\n}\n\ntype Tile = {\n    position: Position,\n    terrain: Terrain,\n    elements: Asset[]\n}\n\ntype Map = Tile[][]\n\nexport type World = {\n    map: Map,\n    teams: Team[]\n}\n\nexport const WorldLoaded = defineHormone<World>(\"game/world/worldLoaded\")\n\nexport const StartGame = defineHormone(\"game/start\")\nexport const SidebarLoaded = defineHormone(\"game/load/sidebar\")\n\nconst loadMapAssets = ({rows, cols}: Props) => {\n    const buildings = getBuildingsForMap({ rows, cols })\n    return buildings\n}\n\nconst loadPlayerAssets = (team: Team, {rows, cols}: Props) => {\n    return getPlayerStartAssets(team, { rows, cols })\n}\n\nconst getNextElement = (array: Asset[][], row: number, col: number) => {\n    const results = array.pop() ?? []\n    return results.map(result => ({...result, row, col})) as Asset[]\n}\n\nexport const load = async ({rows, cols}: Props) => {\n    const mapAssets = loadMapAssets({ rows, cols })\n    const playerAssets = loadPlayerAssets(\"green\", { rows, cols })\n    const redAssets = loadPlayerAssets(\"red\", { rows, cols })\n    const map = range(0, rows - 1)\n        .map((row) => \n            range(0, cols - 1)\n                .map((col) => ({ \n                    position: new Position(row, col), \n                    terrain: randomTerrain(),\n                    elements: [\n                        ...(getNextElement(mapAssets, row, col)), \n                        ...(getNextElement(playerAssets, row, col)),\n                        ...(getNextElement(redAssets, row, col)),\n                    ]\n                }))\n        ) as Map;\n    await releaseHormone(WorldLoaded, {map, teams: [\"red\", \"green\"]});\n    return map\n}","import { Dice } from \"../player/dices/dice\"\n\nexport const teams = (): Team[] => [\"green\", \"red\"]\nexport type Team = \"green\" | \"red\"\n\nexport type Players = {\n    [team in Team]: Player\n}\n\nexport type Resources = {\n    hay: number\n    grain: number\n    iron: number\n    log: number\n    stone: number\n}\n\nexport type Player = {\n    resources: Resources\n}\n\nexport type Asset = {\n    /**\n     * The unique id of the asset in the world\n     */\n    id: string\n    /**\n     * The name of the asset/sprite\n     */\n    name: string\n    team?: Team\n}\n\nexport type PositionedAsset = Asset & SimpleCoords\n\nexport function isPositionedAsset(asset?: Asset): asset is PositionedAsset {\n    return (asset !== undefined && (asset as PositionedAsset)?.row >= 0 && (asset as PositionedAsset)?.col >= 0)\n}\n\nexport type PlayerAsset = Asset & {\n    team: Team\n}\n\nexport type Health = {\n    current: number\n    max: number\n}\nexport type Actions = {\n    current: number\n    max: number\n}\n\nexport type Movement = {\n    points: number\n}\n\nexport type MoveableAsset = PlayerAsset & {\n    movement: Movement\n    health: Health\n    actions: Actions\n}\n\nexport function isMoveableAsset(asset: Asset): asset is MoveableAsset {\n    return (asset && (asset as MoveableAsset)?.actions?.max > 0)\n}\n\nexport type FigherAsset = MoveableAsset & {\n    dices: Dice[]\n}\n\nexport function isFighterAsset(asset: Asset): asset is FigherAsset {\n    return (asset && (asset as FigherAsset)?.dices?.length > 0)\n}\n\nexport type SimpleCoords = {\n    row: number\n    col: number\n}","// this is just to make it clear that we are using a 1-based array; changing it to zero won't work without code changes\nconst ROOT_INDEX = 1;\n\nexport default class Heapify<T> {\n    _keys: T[];\n    _priorities: Uint32Array;\n\n    length: number;\n\n    constructor(private capacity = 4086,\n        PrioritiesBackingArrayType = Uint32Array) {\n\n        this.capacity = capacity;\n        this._keys = [];\n        this._priorities = new PrioritiesBackingArrayType(capacity + ROOT_INDEX);\n        this.length = 0;\n    }\n\n    clear() {\n        this.length = 0;\n    }\n\n    /**\n     * Bubble an item up until its heap property is satisfied.\n     *\n     * @param {Number} index\n     * @private\n     */\n    bubbleUp(index: number) {\n        const key = this._keys[index];\n        const priority = this._priorities[index];\n\n        while (index > ROOT_INDEX) {\n            // get its parent item\n            const parentIndex = index >>> 1;\n            if (this._priorities[parentIndex] <= priority) {\n                break;  // if parent priority is smaller, heap property is satisfied\n            }\n            // bubble parent down so the item can go up\n            this._keys[index] = this._keys[parentIndex];\n            this._priorities[index] = this._priorities[parentIndex];\n\n            // repeat for the next level\n            index = parentIndex;\n        }\n\n        // we finally found the place where the initial item should be; write it there\n        this._keys[index] = key;\n        this._priorities[index] = priority;\n    }\n\n    /**\n     * Bubble an item down until its heap property is satisfied.\n     *\n     * @param {Number} index\n     * @private\n     */\n    bubbleDown(index: number) {\n        const key = this._keys[index];\n        const priority = this._priorities[index];\n\n        const halfLength = ROOT_INDEX + (this.length >>> 1);  // no need to check the last level\n        const lastIndex = this.length + ROOT_INDEX;\n        while (index < halfLength) {\n            const left = index << 1;\n            if (left >= lastIndex) {\n                break;  // index is a leaf node, no way to bubble down any further\n            }\n\n            // pick the left child\n            let childPriority = this._priorities[left];\n            let childKey = this._keys[left];\n            let childIndex = left;\n\n            // if there's a right child, choose the child with the smallest priority\n            const right = left + 1;\n            if (right < lastIndex) {\n                const rightPriority = this._priorities[right];\n                if (rightPriority < childPriority) {\n                    childPriority = rightPriority;\n                    childKey = this._keys[right];\n                    childIndex = right;\n                }\n            }\n\n            if (childPriority >= priority) {\n                break;  // if children have higher priority, heap property is satisfied\n            }\n\n            // bubble the child up to where the parent is\n            this._keys[index] = childKey;\n            this._priorities[index] = childPriority;\n\n            // repeat for the next level\n            index = childIndex;\n        }\n\n        // we finally found the place where the initial item should be; write it there\n        this._keys[index] = key;\n        this._priorities[index] = priority;\n    }\n\n    /**\n     * @param {*} key the identifier of the object to be pushed into the heap\n     * @param {Number} priority 32-bit value corresponding to the priority of this key\n     */\n    push(key: T, priority = 0) {\n        if (this.length === this.capacity) {\n            throw new Error(\"Heap has reached capacity, can't push new items\");\n        }\n        const pos = this.length + ROOT_INDEX;\n        this._keys[pos] = key;\n        this._priorities[pos] = priority;\n        this.bubbleUp(pos);\n        this.length++;\n    }\n\n    pop(): T {\n        const key = this._keys[ROOT_INDEX];\n\n        this.length--;\n\n        if (this.length > 0) {\n            this._keys[ROOT_INDEX] = this._keys[this.length + ROOT_INDEX];\n            this._priorities[ROOT_INDEX] = this._priorities[this.length + ROOT_INDEX];\n\n            this.bubbleDown(ROOT_INDEX);\n        }\n\n        return key;\n    }\n\n    peekPriority() {\n        return this._priorities[ROOT_INDEX];\n    }\n\n    peek() {\n        return this._keys[ROOT_INDEX];\n    }\n\n    toString() {\n        if (this.length === 0) {\n            return \"(empty queue)\";\n        }\n\n        const result = Array(this.length - ROOT_INDEX);\n        for (let i = 0; i < this.length; i++) {\n            result[i] = this._priorities[i + ROOT_INDEX];\n        }\n        return `[${result.join(\" \")}]`;\n    \n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Heapify\";\n    }\n\n    * [Symbol.iterator]() {\n        for (let i = 0; i < this.length; i++) {\n            const priority = this._priorities[i + ROOT_INDEX];\n            const key = this._keys[i + ROOT_INDEX];\n            yield [key, priority];\n        }\n    }\n\n    * keys() {\n        for (let i = 0; i < this.length; i++) {\n            yield this._keys[i + ROOT_INDEX];\n        }\n    }\n\n    * priorities() {\n        for (let i = 0; i < this.length; i++) {\n            yield this._priorities[i + ROOT_INDEX];\n        }\n    }\n}","import Heapify from \"./heapify\";\nimport { Cube } from \"../cube/cube\";\nimport { Position } from \"../position\";\nimport { PathResult } from \"./type\";\n\nconst id = (c: Cube) =>  c.toPosition().toString();\n\nexport const shortestPath = (start: Cube, goal: Cube, map: Cube[], isBlocked: (p: Cube) => boolean, range: number): PathResult => {\n  const frontier = new Heapify();\n  frontier.push(start, 0);\n  const cameFrom: { [key: string]: string | undefined } = {};\n  const costSoFar: { [key: string]: number } = {};\n  const visited: string[] = [];\n  let foundPath = false;\n  cameFrom[id(start)] = id(start);\n  costSoFar[id(start)] = 0;\n\n  if(start.equals(goal)) return {\n    path: []\n  }\n\n  if (isBlocked(goal)) return {\n    path : []\n  } \n\n  while (frontier.length > 0) {\n    const current = frontier.pop() as Cube;\n    if (current.equals(goal)){ foundPath = true; break; }\n    if (frontier.length > 1000) {\n      throw new Error(\"No what kinda path are you searching for?!\")\n    }\n\n    visited.push(current.toPosition().toString())\n\n    for (const next of current.neighbors(map).filter(neighbour => !cameFrom[id(neighbour)]).map(neighbour => \n        map.find(i => i.equals(neighbour)) ?? neighbour)) {\n      if (isBlocked(next)) continue;\n      if (!visited.some(i => i === id(next))) visited.push(id(next))\n\n      const newCost = costSoFar[id(current)] + next.cost();\n      if (range < newCost) continue;\n      if (!costSoFar[id(next)] || newCost < costSoFar[id(next)]) {\n        costSoFar[id(next)] = newCost;\n        frontier.push(next, newCost + goal.heuristic(next));\n        cameFrom[id(next)] = current.toPosition().toString();\n      }\n    }\n  }\n\n  const startPosition = start.toPosition();\n  if (!foundPath) return { path: [], visited}\n  let current: Position | null = goal.toPosition();\n  const path: Position[] = [];\n  do {\n    path.push(current)\n    current = Position.fromString(cameFrom[current.toString()])\n  } while (current !== null && !current.equals(startPosition))\n\n  return {path : path.reverse(), visited};\n};\n\nexport const CubeAStarPathTo = shortestPath\n\nexport const CubeAStarDistance = (start: Cube, goal: Cube, map: Cube[], isBlocked: (p: Cube) => boolean, range: number) => {\n  return shortestPath(start, goal, map, isBlocked, range).path.length\n}\n","import { defineHormone, defineSingleHormone } from \"organismus\";\nimport { Asset } from \".\";\nimport { Dice } from \"../player/dices/dice\";\nimport { FigherAsset, MoveableAsset, Player, SimpleCoords, Team } from \"./types\";\n\nexport type Abort = boolean\nexport const Abort = defineSingleHormone<Abort>(\"action/abort\")\n\nexport type PlayerUpdate = Player\nexport const PlayerUpdate = defineHormone<PlayerUpdate>(\"player/update\")\n\nexport type RequestSelectCoords = SimpleCoords & {\n    item: string,\n    payload?: Asset\n};\nexport const RequestSelectCoords = defineSingleHormone<RequestSelectCoords>(\"player/request/select\")\n\nexport type SelectedItem<T> = SimpleCoords & {\n    item: string,\n    payload?: T\n}\nexport const ItemSelected = defineHormone<SelectedItem<unknown>>(\"player/buildings/item/selected\")\n\nexport type ItemMovedAsset = {\n    asset: MoveableAsset\n    location: SimpleCoords\n}\nexport const ItemMoved = defineHormone<ItemMovedAsset>(\"player/item/moved\")\nexport const KnightCreated = defineHormone<SimpleCoords & {\n    team: Team\n}>(\"player/knights/created\")\nexport const WagonCreated = defineHormone<SimpleCoords & {\n    team: Team\n}>(\"player/wagon/created\")\n\nexport const UpdateAllPlayerElements = defineHormone<Asset[]>(\"player/assets/loaded\")\n\n\nexport type CheckPlayerHasActionsLeft = {}\nexport const CheckPlayerHasActionsLeft = defineHormone<CheckPlayerHasActionsLeft>(\"turn/player/actions/hasLeft\")\nexport type PlayerNoActionsLeft = boolean\nexport const PlayerNoActionsLeft = defineSingleHormone<PlayerNoActionsLeft>(\"turn/player/actions/none\")\n\nexport type HexagonUpdatedPayload = SimpleCoords & {\n    elements: Asset[]\n}\nexport const HexagonUpdated = defineSingleHormone<HexagonUpdatedPayload>(\"map/hexagon/updated\", { readOnce: true })\n\nexport type MoveModeData = {\n    asset: MoveableAsset\n    start: SimpleCoords\n    trail?: SimpleCoords[]\n    end?: SimpleCoords\n}\nexport const MoveModeActivate = defineHormone<MoveModeData>(\"modes/move/activate\")\nexport const MoveModeDeactivate = defineHormone(\"modes/move/deactivate\")\nexport type MoveModeHovered = SimpleCoords\nexport const MoveModeTargetHovered = defineHormone<MoveModeHovered>(\"modes/move/hovered-target\")\nexport type MoveModeEndElement = SimpleCoords\nexport const MoveModeEnd = defineHormone<MoveModeEndElement>(\"modes/move/end\")\n\nexport type BattleModeData = {\n    asset: MoveableAsset\n    start: SimpleCoords\n    range?: SimpleCoords[]\n    end?: SimpleCoords\n}\nexport const BattleModeActivate = defineHormone<BattleModeData>(\"modes/battle/activate\")\nexport const BattleModeActive = defineHormone<BattleModeData>(\"modes/battle/active\")\nexport type BattleModeEndElement = SimpleCoords\nexport const BattleModeEnd = defineHormone<BattleModeEndElement>(\"modes/battle/end\")\nexport const BattleModeDeactivate = defineHormone<BattleModeData>(\"modes/battle/deactivate\")\n\nexport type BattleStarted = {\n    location: SimpleCoords\n    attacker: FigherAsset[]\n    defender: FigherAsset[]\n}\nexport const BattleStarted = defineHormone<BattleStarted>(\"battle/started\")\n\ntype FigherInBattle = {\n    asset: FigherAsset,\n    dices: Dice[]\n}\nexport type BattleThrowDices = {\n    location: SimpleCoords\n    attacker: FigherInBattle\n    defender: FigherAsset\n}\nexport const BattleThrowDice = defineHormone<BattleThrowDices>(\"battle/dice/thrown\")\nexport type BattlePlayerAttacked = {\n    location: SimpleCoords\n    damage: number\n    attacker: FigherAsset\n    defender: FigherAsset\n}\nexport const BattlePlayerAttacked = defineHormone<BattlePlayerAttacked>(\"battle/player/attacked\")\n\nexport type MillTaken = {\n    asset: Asset\n    transfered: {\n        from?: Team,\n        to: Team\n    }\n    by: FigherAsset\n    location: SimpleCoords\n    team: Team\n}\nexport const MillTakeover = defineHormone<MillTaken>(\"mill/takeover\")\n\nexport type ModalBattleOpen = BattleStarted\nexport const ModalBattleOpen = defineHormone<ModalBattleOpen>(\"modal/battle/open\")\n\nexport type ModalDiceResultOpen = BattleStarted & {\n    result: number\n}\nexport const ModalDiceResultOpen = defineHormone<ModalDiceResultOpen>(\"modal/dice-result/open\")\n\nexport type TurnStarted = {}\nexport const TurnStarted = defineHormone<TurnStarted>(\"turn/world/started\")\n\nexport type TurnAccepted = Team\nexport const TurnAccepted = defineHormone<TurnAccepted>(\"turn/world/accepted\")\n\nexport type TurnPlayerComplete = {}\nexport const TurnPlayerComplete = defineHormone<TurnPlayerComplete>(\"turn/player/complete\")\n\nexport type TurnsComplete = {}\nexport const TurnsComplete = defineHormone<TurnsComplete>(\"turn/world/complete\")\n","import { Dice } from \"./dice\";\n\nexport * from \"./Dices\"\n\nfunction r(d: Dice) {\n    return d.sides[Math.floor(Math.random() * d.sides.length)].value\n}\n\nexport function roll(dices: Dice[]) {\n    return dices.reduce((sum, dice) => sum + r(dice), 0)\n}","import { player } from \"../../..\";\nimport { generateUUID } from \"../../../math/guid\";\nimport { FigherAsset, isFighterAsset, Resources, SimpleCoords, Team, World } from \"../../world\";\nimport { SpriteSet } from \"../../world/sprite\";\nimport * as dices from \"../dices\"\n\nexport const Knight: SpriteSet = {\n    id: \"player-knight\",\n    occurences: {\n        min: 0\n    }\n}\n\nexport const CreateKnight = ({ team, row, col }: {team: Team} & SimpleCoords): FigherAsset & SimpleCoords => ({ \n    id: generateUUID(), \n    name: player.knight.name, \n    team, \n    row, \n    col,\n    movement: {\n        points: 10\n    },\n    actions: {\n        current: 2,\n        max: 2\n    },\n    health: {\n        current: 10,\n        max: 10\n    },\n    dices: [ dices.Standard(), dices.MightyBlowOfBetrayal() ]\n})\n\nexport const costs = (): Resources => ({\n    grain: 100,\n    iron: 200,\n    hay: 0,\n    log: 0,\n    stone: 0\n})\n\nexport const findNextPlayerWithAction = (world: World, currentTeam: Team) => {\n    for (const row of world.map) {\n        for (const col of row) {\n            const playerWithActionsLeft = col.elements\n                .filter(element => isFighterAsset(element))\n                .map(element => element as FigherAsset)\n                .find(element => element.team === currentTeam && element.actions.current > 0);\n            \n            if (playerWithActionsLeft) {\n                return playerWithActionsLeft;\n            }\n        }\n    }\n\n    return undefined\n}","import { World, Team } from \".\";\nimport { Asset } from \"./types\";\n\nexport function findCoords(world: World, search: { name: string, team?: Team }) {\n    for (const row of world.map) {\n        const element = row.find(col => \n            col.elements.some(element => \n                element.name === search.name &&\n                (search.team === undefined || search.team === element.team)\n            )\n        )\n        if (element) return element.position\n    }\n    return null;\n}\n\nexport function findElement(world: World, search: { name: string, team?: Team }) {\n    if (!world || !world.map) return null;\n    const findElement = (element: Asset) => \n        element.name === search.name &&\n        (search.team === undefined || search.team === element.team)\n    \n    for (const row of world.map) {\n        const element = row.find(col => \n            col.elements.some(findElement)\n        )\n        if (element) return { ...element.position, element: element.elements.find(findElement)! }\n    }\n    return null;\n}\nexport function findAllElementsFromTeam(world: World, team: Team) {\n    if (!world || !world.map) return [];\n    const findElement = (element: Asset) => \n        team === element.team\n    \n    const results: Asset[] = []\n\n    for (const row of world.map) {\n        for (const col of row) {\n            results.push(...col.elements.filter(findElement))\n        }\n    }\n    return results;\n}","import { Asset } from \"../game\";\n\nexport function deepQuerySelector(element: Asset | undefined) {\n    if (!element) return undefined;\n    const hexagons = [...(document?.querySelector(\"the-mill\")?.shadowRoot?.\n        querySelector(\"world-map\")?.shadowRoot?.\n        querySelectorAll(\"hexagon-element\")\n        ?? [])\n    ]\n    return hexagons.find(hexagon =>\n        hexagon.shadowRoot?.querySelector(\"sprite-set\")?.querySelector(`[id=\"${element.id}\"]`));\n}\n\n(document as any).deepQuerySelector = deepQuerySelector;","import { player } from \"../../..\";\nimport { generateUUID } from \"../../../math/guid\";\nimport { MoveableAsset, Resources, SimpleCoords, Team } from \"../../world\";\nimport { SpriteSet } from \"../../world/sprite\";\n\nexport const Wagon: SpriteSet = {\n    id: \"player-wagon\",\n    occurences: {\n        min: 0\n    }\n}\n\nexport const costs = (): Resources => ({\n    grain: 50,\n    iron: 0,\n    hay: 0,\n    log: 50,\n    stone: 0\n})\n\nexport const CreateWagon = ({ team, row, col }: {team: Team} & SimpleCoords): MoveableAsset & SimpleCoords => ({ \n    id: generateUUID(), \n    name: player.wagon.name, \n    team, \n    row, \n    col,\n    movement: {\n        points: 10\n    },\n    actions: {\n        current: 2,\n        max: 2\n    },\n    health: {\n        current: 10,\n        max: 10\n    }\n})\n","import { hypothalamus, releaseHormone } from \"organismus\";\nimport { PlayerAsset } from \".\";\nimport { buildings } from \"../../assets\";\nimport { Cube } from \"../../math/cube/cube\";\nimport { shortestPath } from \"../../math/pathfinder/a\";\nimport { Position, SimpleCoordsEquals } from \"../../math/position\";\nimport { MoveModeActivate, HexagonUpdated, KnightCreated, MoveModeTargetHovered, MoveModeData, MoveModeEnd, MoveModeDeactivate, ItemMoved, BattleStarted, MillTakeover, ModalBattleOpen, BattleThrowDice, BattlePlayerAttacked, ModalDiceResultOpen, TurnStarted, TurnsComplete, TurnPlayerComplete, TurnAccepted, RequestSelectCoords, ItemSelected, BattleModeData, BattleModeActivate, BattleModeActive, BattleModeDeactivate, BattleModeEnd, CheckPlayerHasActionsLeft, PlayerNoActionsLeft, MillTaken, UpdateAllPlayerElements, Abort, PlayerUpdate, WagonCreated } from \"./events\";\nimport { SidebarLoaded, StartGame, World, WorldLoaded } from \"./worldLoader\";\nimport { roll } from \"../player/dices\";\nimport { CreateKnight, findNextPlayerWithAction, costs as knightCosts } from \"../player/knights/Knight\";\nimport { Asset, isFighterAsset, isMoveableAsset, isPositionedAsset, MoveableAsset, Players, Resources, Team, teams } from \"./types\";\nimport { TurnComplete } from \"../player/Assets\";\nimport { findAllElementsFromTeam } from \"./navigator\";\nimport { deepQuerySelector } from \"../../browser/Selector\";\nimport { CreateWagon,costs as wagonCosts } from \"../player/wagon/Wagon\";\n\nlet world: World = {} as any as World\nlet worldAsCube: Cube[] = []\n\nlet currentTurn: Team\nlet turns: Team[] = []\n\nlet players: Players = {} as any as Players\n\nexport const getCurrentWorld = () => ({ ...world });\nexport const getCurrentTeam = () => currentTurn;\nexport const setCurrentTeam = (team: Team) => currentTurn = team;\nexport const getPlayer = (team: Team) => ({...players[team]})\nexport const getActivePlayer = () => players[currentTurn]\nconst hasActionsLeft = (asset: MoveableAsset) => asset.actions.current > 0;\nconst isOnTurn = ({ team }: { team: Team }) => team === currentTurn;\n\nhypothalamus.on(WorldLoaded, (newWorld) => {\n    worldAsCube = []\n    newWorld.map.forEach((row, rowIndex) => {\n        row.forEach((_, colIndex) => {\n            const cube = new Position(rowIndex, colIndex).toCube()\n            if (_.terrain.movementCosts) {\n                cube.costs = _.terrain.movementCosts\n            }\n            worldAsCube.push(cube)\n        })\n    })\n    world = newWorld;\n    teams().forEach(team => {\n        players[team] = {\n            resources: {\n                hay: 100,\n                grain: 200,\n                iron: 200,\n                log: 100,\n                stone: 100\n            }\n        }\n    })\n    releaseHormone(StartGame)\n})\n\nhypothalamus.on(Abort, async (abort) => {\n    if (!abort) return;\n    releaseHormone(MoveModeDeactivate)\n    releaseHormone(BattleModeDeactivate)\n})\n\nhypothalamus.on([StartGame, SidebarLoaded], () => {\n    releaseHormone(TurnStarted)\n})\n\nhypothalamus.on(TurnStarted, () => {\n    turns = [...world.teams]\n    currentTurn = turns.pop()!\n    releaseHormone(TurnAccepted, currentTurn)\n})\n\nhypothalamus.on(TurnAccepted, team => {\n    const playerAssets = findAllElementsFromTeam(world, team)\n    releaseHormone(UpdateAllPlayerElements, playerAssets)\n    const playerCastle = playerAssets?.find(element => element.name === buildings.castleSmall.name)\n    if (isPositionedAsset(playerCastle)) {\n        releaseHormone(RequestSelectCoords, {\n            item: buildings.castleSmall.name,\n            row: playerCastle.row,\n            col: playerCastle.col,\n            payload: playerCastle,\n        })\n    }\n    setTimeout(() => {\n        deepQuerySelector(playerCastle)?.scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"center\" });\n    }, 2)\n\n    releaseHormone(PlayerUpdate, getPlayer(team))\n})\n\nhypothalamus.on(RequestSelectCoords, async (data) => {\n    await releaseHormone(ItemSelected, { ...data })\n    await releaseHormone(ItemSelected, { ...data, item: \"hexagon\" })\n})\n\nhypothalamus.on(TurnPlayerComplete, () => {\n    currentTurn = turns.pop()!\n    if (currentTurn === undefined) {\n        releaseHormone(TurnsComplete)\n    } else {\n        releaseHormone(TurnAccepted, currentTurn)\n    }\n})\n\nhypothalamus.on(TurnsComplete, () => {\n    world.map.forEach((row) => {\n        row.forEach(({ elements }) => {\n            TurnComplete(...elements\n                .filter(isMoveableAsset)\n            )\n        })\n    })\n    releaseHormone(TurnStarted)\n})\n\nconst tryPay = (team: Team, costs: Resources): boolean => {\n    const availableResources: any = {...players[team].resources};\n    for (const [resource, cost] of Object.entries(costs)) {\n        if (availableResources[resource] < cost) {\n            return false;\n        }\n        availableResources[resource] -= cost\n    }\n    \n    players[team].resources = availableResources\n    return true;\n}\n\nhypothalamus.on(KnightCreated, ({ row, col, team }) => {\n    if (!isOnTurn({ team })) return;\n    if (!tryPay(team, knightCosts())) return;\n    const knight = CreateKnight({ row, col, team })\n    world.map[row][col].elements.push(knight)\n    releaseHormone(HexagonUpdated, { row, col, elements: [...world.map[row][col].elements] })\n    releaseHormone(UpdateAllPlayerElements, findAllElementsFromTeam(world, team))\n    releaseHormone(PlayerUpdate, getActivePlayer())\n})\nhypothalamus.on(WagonCreated, ({ row, col, team }) => {\n    if (!isOnTurn({ team })) return;\n    if (!tryPay(team, wagonCosts())) return;\n    const wagon = CreateWagon({ row, col, team })\n    world.map[row][col].elements.push(wagon)\n    releaseHormone(HexagonUpdated, { row, col, elements: [...world.map[row][col].elements] })\n    releaseHormone(UpdateAllPlayerElements, findAllElementsFromTeam(world, team))\n    releaseHormone(PlayerUpdate, getActivePlayer())\n})\n\nhypothalamus.on(CheckPlayerHasActionsLeft, () => {\n    const playerWithActionsLeft = findNextPlayerWithAction(world, currentTurn)\n\n    if (playerWithActionsLeft === undefined) {\n        releaseHormone(PlayerNoActionsLeft, true)\n    }\n})\n\nconst safeNumber = (n: number) => {\n    return Number.parseInt(n.toString(), 10)\n}\n\nlet moveModeState: MoveModeData | undefined = undefined\nhypothalamus.on(MoveModeActivate, async data => {\n    if (battleModeState) {\n        await releaseHormone(BattleModeDeactivate)\n    }\n    if (!isOnTurn(data.asset)) return;\n    moveModeState = data\n})\nhypothalamus.on(MoveModeDeactivate, () => {\n    moveModeState = undefined\n})\nhypothalamus.on(MoveModeTargetHovered, async data => {\n    if (!moveModeState) {\n        return\n    }\n\n    const start = new Position(safeNumber(moveModeState.start.row), safeNumber(moveModeState.start.col)).toCube()\n    const end = new Position(safeNumber(data.row), safeNumber(data.col)).toCube()\n    const isBlocked = (cube: Cube) => {\n        const { row, col } = cube.toCoords()\n        return world.map[row][col].elements\n            .filter(element => element.team !== moveModeState?.asset.name)\n            .some((element) => isFighterAsset(element))\n    }\n\n    const trail = shortestPath(start, end, worldAsCube, isBlocked, moveModeState.asset.movement.points)\n        .path;\n    let actualEnd = data\n    if (isBlocked(end)) {\n        actualEnd = [...trail].pop()?.toCoords() ?? moveModeState.start\n    }\n    console.log(\"MoveModeTargetHovered\", { ...moveModeState, trail, end: actualEnd })\n\n    await releaseHormone(MoveModeActivate, { ...moveModeState, trail, end: actualEnd })\n})\nhypothalamus.on(MoveModeEnd, async data => {\n    if (!moveModeState) {\n        return\n    }\n    if ((moveModeState.trail?.length ?? 0) < 1) {\n        return;\n    }\n\n    const { start, asset } = moveModeState;\n    if (!isOnTurn(asset)) { return }\n    if (asset.actions === undefined) console.error(\"asset.actions undefined\", asset)\n    if (!hasActionsLeft(asset)) { return; }\n    if (SimpleCoordsEquals(moveModeState.start, data)) {\n        releaseHormone(MoveModeDeactivate)\n        return;\n    }\n    asset.actions.current -= 1\n    const elements = [...world.map[start.row][start.col].elements];\n    world.map[start.row][start.col].elements = []\n    elements.forEach((element) => {\n        if (element.id !== asset.id)\n            world.map[start.row][start.col].elements.push({ ...element, row: start.row, col: start.col } as Asset)\n        else {\n            world.map[data.row][data.col].elements.push({ ...element, row: data.row, col: data.col } as Asset)\n        }\n    })\n    await releaseHormone(HexagonUpdated, { row: start.row, col: start.col, elements: [...world.map[start.row][start.col].elements] })\n    await releaseHormone(HexagonUpdated, { row: data.row, col: data.col, elements: [...world.map[data.row][data.col].elements] })\n    await releaseHormone(MoveModeDeactivate)\n    await releaseHormone(ItemMoved, { asset, location: data })\n    await releaseHormone(CheckPlayerHasActionsLeft)\n})\n\nlet battleModeState: BattleModeData | undefined = undefined\nhypothalamus.on(BattleModeActivate, async data => {\n    if (!isOnTurn(data.asset)) return;\n    if (moveModeState) {\n        await releaseHormone(MoveModeDeactivate)\n    }\n    battleModeState = {\n        ...data,\n        range: new Position(data.start.row, data.start.col)\n            .toCube()\n            .range(1)\n            .map(c => c.toPosition().toCoords())\n    }\n    releaseHormone(BattleModeActive, battleModeState)\n})\nhypothalamus.on(BattleModeEnd, async data => {\n    if (!battleModeState || !isOnTurn(battleModeState.asset)) return;\n    if (SimpleCoordsEquals(battleModeState.start, data)) {\n        releaseHormone(BattleModeDeactivate)\n        return;\n    }\n    const { row, col } = data\n    const { asset } = battleModeState;\n    const otherKnights = [...world.map[row][col].elements]\n        .filter(item => isFighterAsset(item) && (item as PlayerAsset).team !== asset.team)\n    if (hasActionsLeft(asset) && otherKnights.length > 0) {\n        asset.actions.current -= 1;\n        await releaseHormone(BattleStarted, {\n            location: data,\n            attacker: [asset],\n            defender: [...otherKnights]\n        })\n    }\n    releaseHormone(UpdateAllPlayerElements, findAllElementsFromTeam(world, asset.team))\n    releaseHormone(BattleModeDeactivate)\n    await releaseHormone(CheckPlayerHasActionsLeft)\n})\nhypothalamus.on(BattleModeDeactivate, () => battleModeState = undefined)\n\nhypothalamus.on(ItemMoved, async ({ asset, location }) => {\n    if (!isOnTurn(asset)) { return }\n    const { row, col } = location;\n    const otherElements = [...world.map[row][col].elements]\n        .filter(item => item.id !== asset.id);\n    const mills = otherElements\n        .filter(item => item.name === buildings.mill.name && (item as PlayerAsset).team !== asset.team)\n    if (mills.length > 0 && isFighterAsset(asset)) {\n        const millTaken: MillTaken = {\n            asset: mills[0],\n            transfered: {\n                from: mills[0].team!,\n                to: asset.team\n            },\n            location,\n            by: asset,\n            team: asset.team\n        }\n        await releaseHormone(MillTakeover, millTaken)\n        return\n    }\n    releaseHormone(UpdateAllPlayerElements, findAllElementsFromTeam(world, asset.team))\n    await releaseHormone(CheckPlayerHasActionsLeft)\n})\n\nhypothalamus.on(MillTakeover, ({ location, team, asset }) => {\n    if (!isOnTurn({ team })) { return }\n    const { row, col } = location\n    const elements = [...world.map[row][col].elements];\n    world.map[row][col].elements = []\n    elements.forEach((element) => {\n        if (element.id !== asset.id)\n            world.map[row][col].elements.push(element)\n        else {\n            world.map[row][col].elements.push({ ...element, team } as PlayerAsset)\n        }\n    })\n    releaseHormone(UpdateAllPlayerElements, findAllElementsFromTeam(world, team))\n})\n\nhypothalamus.on(BattleStarted, (data) => {\n    releaseHormone(ModalBattleOpen, data)\n})\n\nhypothalamus.on(BattleThrowDice, (data) => {\n    if (!isOnTurn(data.attacker.asset)) { return }\n    const damage = roll(data.attacker.dices)\n    releaseHormone(BattlePlayerAttacked, {\n        attacker: data.attacker.asset,\n        defender: data.defender,\n        damage,\n        location: data.location\n    })\n})\n\nhypothalamus.on(BattlePlayerAttacked, (data) => {\n    const { defender, damage, attacker } = data\n    if (damage < 0) {\n        attacker.health.current += damage\n    } else {\n        defender.health.current -= damage\n    }\n    const { row, col } = data.location\n    const elements = [...world.map[row][col].elements];\n    world.map[row][col].elements = []\n    elements.forEach((element) => {\n        if (element.id === defender.id) {\n            if (defender.health.current > 0) {\n                world.map[row][col].elements.push(defender)\n            }\n        } else if (element.id === attacker.id) {\n            if (attacker.health.current > 0) {\n                world.map[row][col].elements.push(attacker)\n            }\n        } else {\n            world.map[row][col].elements.push(element)\n        }\n    })\n    releaseHormone(HexagonUpdated, { row, col, elements: [...world.map[row][col].elements] })\n    releaseHormone(ModalBattleOpen, undefined)\n    releaseHormone(ModalDiceResultOpen, {\n        attacker: [attacker],\n        defender: [defender],\n        location: data.location,\n        result: damage\n    })\n})","import { MoveableAsset } from \"..\";\n\nexport const TurnComplete = (...assets: MoveableAsset[]) => {\n    assets.forEach(asset => {\n        asset.actions.current = asset.actions.max\n    })\n}","import { Dice } from \"./dice\";\n\nexport function Standard(): Dice {\n    return {\n        name: \"Standardwaffe\",\n        story: \"Eine faire, ausgewogene Waffe die jeder Ritter haben sollte\",\n        sides: [\n            { value: 3 },\n            { value: 3 },\n            { value: 3 },\n            { value: 4 },\n            { value: 5 },\n            { value: 6 },\n        ]\n    }\n}\n\nexport function MightyBlowOfBetrayal(): Dice {\n    return {\n        name: \"Mächtiger Schlag des Betrugs\",\n        story: \"Eine Waffe, die bis zu 12 Schaden verursachen kann, doch auch eine hohe Wahrscheinlichkeit hat gar keinen Schaden zu verursachen, oder sogar den Ritter selbst zu verletzen!\",\n        sides: [\n            { value: -3 },\n            { value: 0 },\n            { value: 0 },\n            { value: 6 },\n            { value: 12 },\n        ]\n    }\n}","import { setLoglevel, LOGLEVEL } from \"organismus\"\n\nif (window.location.hash.indexOf(\"log\") >= 0) {\n    setLoglevel(LOGLEVEL.INFO)\n}\nif (window.location.hash.indexOf(\"trace\") >= 0) {\n    setLoglevel(LOGLEVEL.TRACE)\n}\n\nexport * from \"./worldLoader\"\nexport * from \"./types\"\nexport * from \"./world-state\"","import { css, CSSResult } from \"lit-element\";\n\nexport const sprite = css`\n    :host {\n        position: absolute;\n        width: 120px;\n        height: 140px;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n    div {\n        width: 80%;\n        height: 80%;\n        margin: 10%;\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n`\n\nexport const inactive = css`\n.inactive {\n    opacity: 0.8;\n    filter: grayscale(100%);\n}`\n\nexport const sidebar = css`\n    ::-webkit-scrollbar {\n      width: 10px;\n      height: 10px;\n      cursor: pointer;\n    }\n    ::-webkit-scrollbar-track {\n      background: #f1f1f1;\n    }\n    ::-webkit-scrollbar-thumb {\n      background: #888;\n    }\n    ::-webkit-scrollbar-thumb:hover {\n      background: #555;\n    }\n`\nexport const sidebarFor = (element: CSSResult) => css`\n     ${element} {\n        scrollbar-color:  #888 #f1f1f1;\n        scrollbar-width: thin;\n     }\n`","import { css, html } from \"lit-element\";\nimport { LitElementWithProps, pureLit } from \"pure-lit\";\n\ntype Props = {\n    src: string\n    height: string\n}\n\nexport default pureLit(\"button-image\", (el: LitElementWithProps<Props>) => {\n    const style = el.height ? `height:${el.height};` : \"\"\n    return html`<button style=\"${style}; background-image: url('${el.src}'), url('/assets/sidebar/btn_1.png')\">\n        <slot></slot>\n    </button>`\n}, {\n    styles: css`\n    button {\n        background: none;\n        border: none;\n        margin: 0;\n        padding: 0;\n        background-image: url('/assets/sidebar/btn_1.png');\n        background-size: contain;\n        height: 70px;\n        background-repeat: no-repeat;\n        cursor: pointer;\n        padding-left: 33%; \n        width: 85%;\n    }\n    slot {\n        display: flex;\n        flex-wrap: nowrap;\n        justify-content: space-between;\n    }\n    `,\n    defaults: {\n        src: \"\",\n        height: \"\"\n    }\n})","import { css, html } from \"lit-element\";\nimport { pureLit } from \"pure-lit\";\n\n\nexport default pureLit(\"button-pure\", () => {\n    return html`<button>\n        <slot></slot>\n    </button>`\n}, {\n    styles: css`\n    \n    button {\n        background: none;\n        border: none;\n        margin: 0;\n        padding: 0;\n        cursor: pointer;\n    }\n     img {\n        margin: 3px;\n        width: 64px;\n        height: 64px;\n    }\n    `\n})","import { css } from \"lit-element\";\n\nexport const modalCoreCss =  css`\n#background {\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    background-color: var(--colorContrast);\n    opacity: 0.7;\n    z-index: 1000;\n}\n#modal {\n    position: absolute;\n    left: 20%;\n    top: 20%;\n    width: 60%;\n    height: 60%;\n    padding: 12px;\n    background-color: var(--colorMain);\n    opacity: 1;\n    z-index: 1001;\n}\n`\n\nexport const modalHeaderCss = css`\n    header {\n        position: relative;\n        height: 2rem;\n    }\n    #close {\n        position: absolute;\n        right: 12px;\n        font-size: 2rem;\n    }\n`","import { html, LitElement } from \"lit-element\"\nimport { LitElementWithProps, pureLit } from \"pure-lit\"\nimport { modalCoreCss, modalHeaderCss } from \"./modal.styles\"\n\ntype Prop = {\n    open: boolean\n    preventClose: boolean\n}\n\nconst trigger = (el: LitElement, event: string) => {\n    el.dispatchEvent(new CustomEvent(event))\n}\n\nexport default pureLit(\"modal-window\", (el: LitElementWithProps<Prop>) => {\n    return el.open ? html`\n    <div id=\"background\" @click=\"${() => el.preventClose && trigger(el, \"close\")}\"></div>\n    <div id=\"modal\">\n        <header>\n            ${el.preventClose ? html`` : html`<button-pure id=\"close\" @click=\"${() => trigger(el, \"close\")}\"><text-block size=\"large\">X</text-block></button-pure>`}\n            <slot name=\"header\"></slot>\n        </header>\n        <div>\n            <slot></slot>\n        </div>\n        <slot name=\"footer\"></slot>\n    </div>\n    ` : html``\n}, {\n    styles: [modalCoreCss, modalHeaderCss],\n    defaults: {\n        open: false,\n        preventClose: false\n    }\n})\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shallowClone = void 0;\nfunction shallowClone(value) {\n    if (typeof value !== \"object\" || !value || value instanceof Date || value instanceof RegExp)\n        return value;\n    return (Array.isArray(value)) ? [...value] : Object.assign({}, value);\n}\nexports.shallowClone = shallowClone;\n//# sourceMappingURL=clone.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withReducer = exports.withState = exports.decorate = exports.asUpdateableLitElement = void 0;\nfunction asUpdateableLitElement(element) {\n    if (!element.dispatchEvent || !element.requestUpdate)\n        throw new Error(\"Element missing required functions (dispatchEvent/requestUpdate)\");\n    return element;\n}\nexports.asUpdateableLitElement = asUpdateableLitElement;\nfunction decorate(litElement) {\n    const decoratedLitElement = litElement;\n    if (decoratedLitElement.__registered_states)\n        return decoratedLitElement;\n    const updateableLitLikeElement = asUpdateableLitElement(litElement);\n    const oldUpdated = updateableLitLikeElement.updated;\n    decoratedLitElement.__registered_states = {\n        index: 0,\n        count: 0,\n        states: [],\n        reducers: []\n    };\n    updateableLitLikeElement.updated = (args) => {\n        decoratedLitElement.__registered_states.index = 0;\n        return oldUpdated(args);\n    };\n    return decoratedLitElement;\n}\nexports.decorate = decorate;\nfunction withState(litElement, state, options = {}) {\n    const decoratedLitElement = decorate(litElement);\n    const { index, count } = decoratedLitElement.__registered_states;\n    if (index === count) {\n        decoratedLitElement.__registered_states.index++;\n        decoratedLitElement.__registered_states.count++;\n        decoratedLitElement.__registered_states.states.push(state);\n        return state;\n    }\n    decoratedLitElement.__registered_states.index++;\n    if (options.updateDefault)\n        decoratedLitElement.__registered_states.states[index].inject(state.getState());\n    return decoratedLitElement.__registered_states.states[index];\n}\nexports.withState = withState;\nfunction withReducer(litElement, reduce) {\n    const decoratedLitElement = decorate(litElement);\n    const { index, count, reducers } = decoratedLitElement.__registered_states;\n    if (index === count && !reducers[index - 1]) {\n        decoratedLitElement.__registered_states.reducers[index - 1] = reduce;\n        return reduce;\n    }\n    return decoratedLitElement.__registered_states.reducers[index - 1];\n}\nexports.withReducer = withReducer;\n//# sourceMappingURL=decorator.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useState = void 0;\nconst clone_1 = require(\"./clone\");\nconst decorator_1 = require(\"./decorator\");\nexports.useState = (element, defaultValue, options = {}) => {\n    let state = clone_1.shallowClone(defaultValue);\n    const subscribers = [() => element.requestUpdate()];\n    return decorator_1.withState(element, {\n        publish: (update) => __awaiter(void 0, void 0, void 0, function* () {\n            if (state === update)\n                return;\n            state = clone_1.shallowClone(update);\n            subscribers.forEach(subscriber => subscriber(state));\n        }),\n        subscribe: (onChange) => subscribers.push(onChange),\n        getState: () => (state),\n        inject: (update) => { state = update; }\n    }, options);\n};\n//# sourceMappingURL=state.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useReducer = void 0;\nconst state_1 = require(\"./state\");\nconst decorator_1 = require(\"./decorator\");\nexports.useReducer = (element, reducer, defaultValue, options = {}) => {\n    const { getState, publish } = state_1.useState(element, defaultValue, options);\n    const subscribers = [];\n    return decorator_1.withReducer(element, {\n        getState,\n        subscribe: (onChange) => subscribers.push(onChange),\n        when: (action, onChange) => subscribers.push((triggeredAction, state) => triggeredAction === action && onChange(state)),\n        publish: (action, payload) => {\n            const reducers = reducer(getState());\n            if (reducers[action]) {\n                publish(reducers[action](payload));\n                subscribers.forEach(subscriber => subscriber(action, getState()));\n                options.dispatchEvent &&\n                    element.dispatchEvent(new CustomEvent(action, { detail: getState() }));\n            }\n        }\n    });\n};\n//# sourceMappingURL=reducer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar state_1 = require(\"./state\");\nObject.defineProperty(exports, \"useState\", { enumerable: true, get: function () { return state_1.useState; } });\nvar reducer_1 = require(\"./reducer\");\nObject.defineProperty(exports, \"useReducer\", { enumerable: true, get: function () { return reducer_1.useReducer; } });\n//# sourceMappingURL=index.js.map","import { html } from \"lit-element\"\nimport { useState } from \"lit-element-state-decoupler\"\nimport { pureLit } from \"pure-lit\"\n\nexport default pureLit(\"modal-container\", (el) => {\n    const { getState: modalOpen, publish: modalSetOpen } = useState(el, false)\n    return html`\n        <button-pure @click=\"${() => modalSetOpen(true)}\"><slot></slot></button-pure>\n        <modal-window .open=${modalOpen()} @close=${() => modalSetOpen(false)}>\n            <slot slot=\"header\" name=\"header\"></slot>\n            <slot name=\"body\"></slot>\n            <slot slot=\"footer\" name=\"footer\"></slot>\n        </modal-window>\n    `\n})","import { css, html } from \"lit-element\";\nimport { pureLit } from \"pure-lit\";\n\ntype Props = {\n    size: \"small\" | \"medium\" | \"large\"| \"x-large\"\n    type: \"inline\" | \"paragraph\"\n}\n\nconst sizes = css`\n    .small {\n        font-size: 0.75rem;\n    }\n    .medium {\n        font-size: 1rem;\n    }\n    .large {\n        font-size: 1.5rem;\n    }\n    .x-large {\n        font-size: 2rem;\n    }\n`\nconst type = css`\n    .inline {\n        display: inline;\n    }\n    .paragraph {\n        display: block;\n    }\n`\n\nexport default pureLit(\"text-block\", ({size, type}: Props) => {\n    return html`<span class=\"${size} ${type}\"><slot></slot></span>`\n}, {\n    styles: [sizes, type],\n    defaults: {\n        size: \"medium\",\n        type: \"inline\"\n    }\n})","import { html } from \"lit-element\";\nimport { pureLit } from \"pure-lit\";\nimport { style } from \"./loading-bar.styles\";\n\ntype Prop = {\n    width: string\n}\n\nexport default pureLit(\"loading-bar\", ({width}: Prop) => {\n    return html`\n    <div class=\"progress-bar\">\n        <span class=\"bar\">\n            ${width === \"0%\" ? html`` : html`<span class=\"progress\" style=\"width: ${width};\"></span>`}\n        </span>\n    </div>\n    `\n}, {\n    styles: [style],\n    defaults: {\n        width: \"100%\"\n    }\n})","import { css } from \"lit-element\";\n\nexport const style = css`\n    \n.progress-bar {\n    border-radius: 60px;\n    overflow: hidden;\n    width: 100%;\n\n}\n.bar {\n    background: rgba(0,0,0,0.075);\n}\n\n.progress {\n    background: #75b800;\n    color: #fff;\n    padding: 5px;\n    width: 0;\n}\n\n\nspan {\n    display: block;\n}\n`","import { html } from \"lit-element\";\nimport { pureLit } from \"pure-lit\";\nimport { styles } from \"./dice.style\";\n\ntype Prop = {\n    result: number\n}\n\nexport default pureLit(\"dice-roll\", ({result}: Prop) => \n    html`<div id=\"cube\">\n        <div id=\"side1\"></div>\n        <div id=\"side2\"></div>\n        <div id=\"side3\">${result}</div>\n        <div id=\"side4\"></div>\n        <div id=\"side5\"></div>\n        <div id=\"side6\"></div>\n    </div>`\n, {\n    styles,\n    props: [{\n        result: {type: Number}\n    }]\n})","import { css } from \"lit-element\";\n\nexport const styles = css`\n:host {\n    width: 250px;\n    height: 213px;\n    margin: 20px auto;\n}\n#cube {\n    width: 112px;\n    height: 112px;\n    top: 50px;\n    transform-style: preserve-3d;\n    transform: rotateX(-22deg) rotateY(1083deg) rotateZ(0deg);\n    margin: auto;\n    position: relative;\n    transform-style: preserve-3d;\n    transition: all 0.5s ease-in-out;\n    animation: cubeRotation 5s 1;\n    animation-fill-mode: forwards;\n}\n@keyframes cubeRotation {\n    0%   {\ttransform: rotateX(-22deg) rotateY(1083deg) rotateZ(0deg);\t}\n    100%   {\ttransform: rotateX(-382deg) rotateY(3deg) rotateZ(1080deg);\t}\n}\n@keyframes reveal {\n    0%   {\tcolor:white;\t}\n    80%   {\tcolor:white;\t}\n    100%   {\tcolor:black;\t}  \n}\n#cube > div {\n    position: absolute;\n    transition: all 0.5s ease-in-out;\n    width: 112px;\n    height: 112px;\n    float: left;\n    overflow: hidden;\n    background-color:white;\n    \n    line-height: 112px;\n    text-align: center;\n    font-size: 5rem;\n}\n#side1 {\n  transform: rotatex(90deg) translateX(0px) translateY(0px) translateZ(56px);\n\tborder:1px solid black;\n}\n#side2 {\n    transform: rotateY(-90deg) translateX(0px) translateY(0px) translateZ(56px);\n\tborder:1px solid black;\n}\n#side3 {\n    transform: translateX(0px) translateY(0px) translateZ(56px);\n\tborder:1px solid black;\n  color:white;\n    animation: reveal 5s 1;\n    animation-fill-mode: forwards;\n}\n#side4 {\n    transform: rotateY(90deg) translateX(0px) translateY(0px) translateZ(56px);\n\tborder:1px solid black;\n}\n#side5 {\n    transform: rotateY(180deg) translateX(0px) translateY(0px) translateZ(56px);\n\tborder:1px solid black;\n}\n#side6 {\n    transform: rotateX(-90deg) translateX(0px) translateY(0px) translateZ(56px);\n\tborder:1px solid black;\n}\n`","import { css, html } from \"lit-element\"\nimport { useState } from \"lit-element-state-decoupler\"\nimport { useReceptor } from \"organismus\"\nimport { LitElementWithProps, pureLit } from \"pure-lit\"\nimport { TurnAccepted } from \"../../game/world/events\"\nimport { inactive, sprite } from \"../styles\"\n\nexport const name = \"player-knight\"\n\ntype Props = {\n    team: string\n}\n\nexport default pureLit(name, (el: LitElementWithProps<Props>) => {\n    const { getState, publish } = useState(el, \"\")\n    useReceptor(el, TurnAccepted, publish)\n    return html`<div class=\"${getState() === el.team ? \"active\" : \"inactive\"}\" style=\"background-image:url('/assets/knight_${el.team}.png'\"></div>`\n},\n{\n    styles: [\n        sprite,\n        inactive,\n        css`\n        div {\n            background-size: contain;\n            opacity: 1;\n        }\n        `\n    ],\n    defaults: {\n        team: \"\",\n    }\n})","import { css, html } from \"lit-element\"\nimport { useState } from \"lit-element-state-decoupler\"\nimport { useReceptor } from \"organismus\"\nimport { LitElementWithProps, pureLit } from \"pure-lit\"\nimport { TurnAccepted } from \"../../game/world/events\"\nimport { inactive, sprite } from \"../styles\"\n\nexport const name = \"player-wagon\"\n\ntype Props = {\n    team: string\n}\n\nexport default pureLit(name, (el: LitElementWithProps<Props>) => {\n    const { getState, publish } = useState(el, \"\")\n    useReceptor(el, TurnAccepted, publish)\n    return html`<div class=\"${getState() === el.team ? \"active\" : \"inactive\"}\" style=\"background-image:url('/assets/wagon_${el.team}.png'\"></div>`\n},\n{\n    styles: [\n        sprite,\n        inactive,\n        css`\n        div {\n            background-size: contain;\n            opacity: 1;\n        }\n        `\n    ],\n    defaults: {\n        team: \"\",\n    }\n})","import { css, html } from \"lit-element\";\nimport { LitElementWithProps, pureLit } from \"pure-lit\";\nimport { Dice } from \"../../../game/player/dices/dice\";\n\ntype Props = {\n    dices?: Dice[]\n}\n\nexport default pureLit(\"dice-selector\", (el: LitElementWithProps<Props>) => {\n    return html`${el.dices?.map(dice => html`<div>\n        <input type=\"radio\" \n            @click=${() => el.dispatchEvent(new CustomEvent(\"select\", { detail: dice }))}\n            id=\"${dice.name}\" \n            name=\"dice\" \n            value=\"${dice.name}\">\n        <label for=\"${dice.name}\">\n            <strong>${dice.name}</strong> - ${dice.story}\n            <div class=\"sides\" style=\"grid-template-columns: 1fr ${dice.sides.map(() => \"1fr\").join(\" \")};\">\n                <h5>Würfelergebnisse</h5>\n                ${dice.sides.map(side => html`<div class=\"side\">${side.value}</div>`)}\n            </div>\n        </label>\n    </div>`)}`\n},\n    {\n        styles: css`\n        .sides {\n            display: grid;\n            padding: 0.5rem;\n        }\n        h5 {\n            margin: 0;\n        }\n        .side {\n            background-image: url(\"/assets/dice.png\");\n            background-size: contain;\n            height: 1rem;\n            background-repeat: no-repeat;\n            background-position: center;\n            text-align: center;\n            padding-top: 0.25rem;\n            font-size: 0.75rem;\n        }\n     `\n    })","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isPrimitive } from '../lib/parts.js';\nimport { directive, NodePart } from '../lit-html.js';\n// For each part, remember the value that was last rendered to the part by the\n// unsafeHTML directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeHTML. If not, we'll always re-render the\n// value passed to unsafeHTML.\nconst previousValues = new WeakMap();\n/**\n * Renders the result as HTML, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive((value) => (part) => {\n    if (!(part instanceof NodePart)) {\n        throw new Error('unsafeHTML can only be used in text bindings');\n    }\n    const previousValue = previousValues.get(part);\n    if (previousValue !== undefined && isPrimitive(value) &&\n        value === previousValue.value && part.value === previousValue.fragment) {\n        return;\n    }\n    const template = document.createElement('template');\n    template.innerHTML = value; // innerHTML casts to string internally\n    const fragment = document.importNode(template.content, true);\n    part.setValue(fragment);\n    previousValues.set(part, { value, fragment });\n});\n//# sourceMappingURL=unsafe-html.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withEffect = exports.decorate = exports.asUpdateableLitElement = void 0;\nfunction asUpdateableLitElement(element) {\n    if (!element.dispatchEvent || !element.requestUpdate)\n        throw new Error(\"Element missing required functions (dispatchEvent/requestUpdate)\");\n    return element;\n}\nexports.asUpdateableLitElement = asUpdateableLitElement;\nfunction decorate(litElement) {\n    const decoratedLitElement = litElement;\n    if (decoratedLitElement.__registered_effects)\n        return decoratedLitElement;\n    const updateableLitLikeElement = asUpdateableLitElement(litElement);\n    const oldUpdated = updateableLitLikeElement.updated;\n    decoratedLitElement.__registered_effects = {\n        index: 0,\n        count: 0,\n        effects: [],\n    };\n    updateableLitLikeElement.updated = (args) => {\n        decoratedLitElement.__registered_effects.index = 0;\n        return oldUpdated(args);\n    };\n    return decoratedLitElement;\n}\nexports.decorate = decorate;\nfunction withEffect(litElement, effect) {\n    const decoratedLitElement = decorate(litElement);\n    const { index, count } = decoratedLitElement.__registered_effects;\n    if (index === count) {\n        decoratedLitElement.__registered_effects.index++;\n        decoratedLitElement.__registered_effects.count++;\n        decoratedLitElement.__registered_effects.effects.push(effect);\n        return effect;\n    }\n    decoratedLitElement.__registered_effects.index++;\n    return decoratedLitElement.__registered_effects.effects[index];\n}\nexports.withEffect = withEffect;\n//# sourceMappingURL=decorator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useOnce = exports.useEffect = void 0;\nconst decorator_1 = require(\"./decorator\");\nfunction useEffect(element, on, observe) {\n    const effect = decorator_1.withEffect(element, {\n        on,\n        observe: [\"__initial__dirty\"],\n    });\n    effect.observe.some((o, index) => observe[index] !== o) && effect.on();\n    effect.observe = observe;\n}\nexports.useEffect = useEffect;\nexports.useOnce = (element, on) => useEffect(element, on, []);\n//# sourceMappingURL=effect.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar effect_1 = require(\"./effect\");\nObject.defineProperty(exports, \"useEffect\", { enumerable: true, get: function () { return effect_1.useEffect; } });\nObject.defineProperty(exports, \"useOnce\", { enumerable: true, get: function () { return effect_1.useOnce; } });\n//# sourceMappingURL=index.js.map","import { css, html } from \"lit-element\"\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html.js';\nimport { releaseHormone, useReceptor } from \"organismus\";\nimport { LitElementWithProps, pureLit } from \"pure-lit\";\nimport { useOnce } from \"lit-element-effect\"\n\nimport { buildings, player } from \".\"\nimport { Asset, isPositionedAsset, Team } from \"../game\";\nimport { HexagonUpdated, HexagonUpdatedPayload, ItemSelected, RequestSelectCoords, TurnAccepted } from \"../game/world/events\";\nimport { useState } from \"lit-element-state-decoupler\";\nimport { deepQuerySelector } from \"../browser/Selector\";\n\ntype Props = {\n    row: number,\n    col: number,\n    triggers: { [team: string]: (() => Promise<unknown>)[] }\n}\n\nasync function doTrigger(triggers: (() => Promise<unknown>)[]) {\n    for (const trigger of triggers) {\n        await trigger()\n    }\n} \n\nconst getFilteredTriggers = (team: Team, triggers: { [team: string]: (() => Promise<unknown>)[] }) => {\n    return [\n        ...(triggers.none ?? []),\n        ...(triggers[team] ?? [])\n    ]\n}\n\npureLit(\"sprite-set\", (el: LitElementWithProps<Props>) => {\n    const { getState: getUpdated, publish: setUpdated } \n        = useState<HexagonUpdatedPayload | undefined>(el, undefined)\n    const { getState: getCurrentTeam, publish: setCurrentTeam }\n        = useState<Team | undefined>(el, undefined)\n\n    useReceptor(el, \n        HexagonUpdated, \n        (u) => el.row.toString() === u?.row.toString() && el.col.toString() === u?.col.toString(), \n        setUpdated\n    )\n    useReceptor(el,\n        TurnAccepted,\n        setCurrentTeam\n    )\n\n    if (getUpdated()) {\n        doTrigger(getFilteredTriggers(getCurrentTeam()!, el.triggers))\n            .then(() => releaseHormone(ItemSelected, { item: \"hexagon\", row: el.row, col: el.col }))\n    }\n    useOnce(el, () => {\n        el.addEventListener(\"click\", async () => {\n            doTrigger(getFilteredTriggers(getCurrentTeam()!, el.triggers))\n        })\n    })\n\n    return html`<slot></slot>`\n}, {\n    defaults: {\n        row: 0,\n        col: 0,\n        triggers: {}\n    }\n})\n\npureLit(\"sprite-player-elements-grid\", () => {\n    return html`<slot></slot>`\n},\n{\n    styles: css`\n    slot {\n        display: grid;\n        align-items: center;\n        grid-template-columns: repeat(6, 1fr);\n    }\n    `\n})\n\nexport const spriteFactory = (elements: Asset[] | undefined, row: number, col: number) => {\n    const triggers: { [team: string]: (() => Promise<unknown>)[] } = {}\n    const assets = elements?.map((element) => {\n        const entry = Object.entries({ ...buildings, ...player }).find(([_, value]) => value.name === element.name)\n        const payload = Object.entries({ ...element, name: undefined })\n            .filter(([_, values]) => values !== undefined)\n        const attributes = payload\n            .map(([key, value]) => `${key}=\"${value}\"`)\n            .join(\" \")\n        const team = element.team ?? \"none\";\n        triggers[team] = triggers[team] ?? []\n        triggers[team].push(() => releaseHormone(ItemSelected, { item: entry?.[1].name ?? \"\", row, col, payload: {...element} }))\n        return html`${unsafeHTML(`<${entry?.[1].name ?? \"span\" } ${attributes}></${entry?.[1].name ?? \"span\" }>`)}`\n    })\n    return html`<sprite-set .triggers=${triggers} col=\"${col}\" row=\"${row}\">${assets}</sprite-set>`\n}\n\nexport const spriteGridFactory = (elements: Asset[] | undefined, elementStyle: string = \"\") => {\n    const assets = elements?.map((element) => {\n        const entry = Object.entries({ ...buildings, ...player }).find(([_, value]) => value.name === element.name)\n        const payload = Object.entries({ ...element, name: undefined })\n            .filter(([_, values]) => values !== undefined)\n        const attributes = payload\n            .map(([key, value]) => `${key}=\"${value}\"`)\n            .join(\" \")\n        const position = isPositionedAsset(element) ? { row: element.row, col: element.col } : { row: 0, col: 0}\n        const onClick = () => {\n            releaseHormone(RequestSelectCoords, {\n                item: element.name,\n                ...position,\n                payload: element,\n            })\n            setTimeout(() => {\n                deepQuerySelector(element)?.scrollIntoView({behavior: \"smooth\", block: \"center\", inline: \"center\"});\n            }, 2)\n        }\n        const onHover = () => {\n            setTimeout(() => {\n                deepQuerySelector(element)?.scrollIntoView({behavior: \"smooth\", block: \"center\", inline: \"center\"});\n            }, 2)\n        }\n        return html`<div\n            @click=\"${onClick}\"\n            @mouseover=\"${onHover}\"\n            style=\"position:relative; cursor: pointer; width: 120px;${elementStyle};\">\n                ${unsafeHTML(`<${entry?.[1].name ?? \"span\" } ${attributes} style=\"${elementStyle};\"></${entry?.[1].name ?? \"span\" }>`)}\n        </div>`\n    })\n    return html`<sprite-player-elements-grid>${assets}</sprite-player-elements-grid>`\n}","import { css, html } from \"lit-element\";\nimport { pureLit } from \"pure-lit\";\nimport { FigherAsset } from \"../../game\";\nimport { spriteFactory } from \"../sprites\";\n\ntype Props = {\n    player: FigherAsset,\n    row: number,\n    col: number\n}\n\nexport default pureLit(\"fighter-info\", ({player, row, col}: Props) => {\n    return html`<div class=\"sprite ${player?.health.current < 1 ? \"dead\" : \"alive\"}\">\n            ${spriteFactory(player ? [player] : [], row, col)}\n        </div>\n        <div class=\"info\">\n            <h3>Gesundheit</h3>\n            <loading-bar width=\"${(player?.health.current / player?.health.max) * 100}%\"></loading-bar>\n            <p>${player?.health.current} von ${player?.health.max}</p>\n        </div>`;\n}, {\n    styles: [\n        css`\n        :host {\n            display: grid;\n            grid-template-columns: 1fr 3fr;\n        }\n        .sprite {\n            height: 140px;\n        }\n        @keyframes rotation {\n            from {\n                transform: rotate(0deg);\n            }\n            to {\n                transform: rotate(-90deg);\n            }\n        }\n        .dead {\n            animation: rotation 5s 1;\n            animation-fill-mode: forwards;\n        }\n        `\n    ],\n    props: [{\n        player: { type: Object },\n        row: {type: Number},\n        col: {type: Number}\n    }]\n})","export const HEXAGON_WIDTH = 120","import { css } from 'lit-element';\nimport { HEXAGON_WIDTH } from './consts';\n\nexport const cssHexagon =  css`\n:host {\n  display: inline-block;\n}\n.hexagon {\n  position: relative;\n  cursor: pointer;\n  display: inline-block;\n  background-color: var(--colorShow);\n  width: ${HEXAGON_WIDTH}px;\n  height: 140px;\n  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);\n  transition: all 500ms linear;\n  z-index: 1;\n}\n.hexagon:hover {\n  background: var(--colorFocus);\n}`\n\nexport const cssHexagonMovement = css`\n    .inactive {\n        opacity: 0.3;\n        cursor: not-allowed;\n    }\n    .active.start {\n        filter: brightness(50%);\n    }\n    .active.end {\n        filter: brightness(50%);\n    }\n    .active.unreachable {\n        cursor: not-allowed;\n        filter: brightness(50%) hue-rotate(332deg);\n    }\n`","import { html } from 'lit-element';\nimport { releaseHormone, useReceptor } from 'organismus';\nimport { useOnce } from \"lit-element-effect\"\nimport { LitElementWithProps, pureLit } from 'pure-lit';\nimport { MoveModeActivate, MoveModeEnd, HexagonUpdated, HexagonUpdatedPayload, ItemSelected, MoveModeData, MoveModeTargetHovered, BattleModeActive, BattleModeDeactivate, MoveModeDeactivate, BattleModeData } from '../../game/world/events';\nimport { Sprite } from '../../game/world/sprite';\nimport { spriteFactory } from '../sprites';\nimport { useState } from 'lit-element-state-decoupler';\nimport { Asset, SimpleCoords } from '../../game';\nimport * as movement from './Hexagon.movement';\nimport * as battle from './Hexagon.battle';\nimport { cssHexagon, cssHexagonMovement } from './Hexagon.styles';\nimport { SimpleCoordsEquals } from '../../math/position';\n\ntype Props = {\n    background: Sprite | undefined\n    elements: Asset[]\n    row: number\n    col: number\n}\n\nconst getCssClass = (hexagon: SimpleCoords, moveMode: MoveModeData | undefined, battleMode: BattleModeData | undefined) => {\n    return `${movement.getCssClass(hexagon, moveMode)} ${battle.getCssClass(hexagon, battleMode)}`\n}\nconst click = (hexagon: SimpleCoords, moveMode: MoveModeData | undefined, battleMode: BattleModeData | undefined) => {\n    if (moveMode && moveMode.end && SimpleCoordsEquals(moveMode.end, hexagon)) {\n        movement.click(hexagon, moveMode)\n    } else if (battleMode) {\n        battle.click(hexagon, battleMode)\n    }\n}\n\nexport default pureLit('hexagon-element', (el: LitElementWithProps<Props>) => {\n    useOnce(el, () => {\n      el.addEventListener(\"click\", () => releaseHormone(ItemSelected, {item: \"hexagon\", row: el.row, col: el.col}))\n    })\n\n    const {row, col} = el;\n    const { getState: getElements, publish: setElements } = useState<HexagonUpdatedPayload>(el, {elements: el.elements, row, col})\n    const { getState: getMovementMode, publish: setMovementMode } = useState<MoveModeData | undefined>(el, undefined)\n    const { getState: getBattleMode, publish: setBattleMode } = useState<BattleModeData | undefined>(el, undefined)\n    useReceptor(el, HexagonUpdated, (h) => (h?.row.toString() === row.toString() && h?.col.toString() === col.toString()), setElements)\n    useReceptor(el, MoveModeActivate, setMovementMode)\n    useReceptor(el, BattleModeActive, setBattleMode)\n    useReceptor(el, MoveModeEnd, () => setMovementMode(undefined))\n    useReceptor(el, MoveModeDeactivate, () => setMovementMode(undefined))\n    useReceptor(el, BattleModeDeactivate, () => setBattleMode(undefined))\n\n    const update = getElements()\n    \n    return html`<div \n      class=\"hexagon ${getCssClass(el, getMovementMode(), getBattleMode())}\" \n      @mouseover=${() => { if (getMovementMode()) {releaseHormone(MoveModeTargetHovered, {row, col})} }}\n      @click=${() => (click(el, getMovementMode(), getBattleMode()), document.dispatchEvent(new CustomEvent(\"hello-world\", { detail: { hello: \"world\"}})))}\n      style=\"background-image:url(/assets/${el.background?.file}.png); background-position: ${el.background?.x}px ${el.background?.y}px;\">\n      ${spriteFactory(update.elements, el.row, el.col)}</div>`\n}, {\n    styles: [cssHexagon, cssHexagonMovement],\n    defaults: {\n        background: undefined,\n        elements: [],\n        col: 0,\n        row: 0\n    }\n}\n\n)\n","import { SimpleCoords } from \"../../game\";\nimport { MoveModeData, MoveModeEnd } from \"../../game/world/events\";\nimport { SimpleCoordsEquals } from \"../../math/position\";\nimport { releaseHormone } from 'organismus';\n\nexport function getCssClass(hexagon: SimpleCoords, data: MoveModeData | undefined) {\n    if (!data) {\n        return \"\"\n    }\n\n    if (SimpleCoordsEquals(data.start, hexagon)) return \"active start\"\n    if (data.end && ((data.trail?.length ?? 0) < 1) && SimpleCoordsEquals(data.end, hexagon)) return \"active unreachable\"\n    if (data.end && SimpleCoordsEquals(data.end, hexagon)) return \"active end\"\n    if (data.trail && data.trail.some(coord => SimpleCoordsEquals(coord, hexagon))) return \"active trail\"\n    return \"inactive\"\n}\n\nexport function click(hexagon: SimpleCoords, data: MoveModeData | undefined) {\n    if (!data) {\n        return\n    }\n\n    releaseHormone(MoveModeEnd, hexagon)\n}","import { SimpleCoords } from \"../../game\";\nimport { BattleModeData, BattleModeEnd } from \"../../game/world/events\";\nimport { SimpleCoordsEquals } from \"../../math/position\";\nimport { releaseHormone } from 'organismus';\n\nexport function getCssClass(hexagon: SimpleCoords, data: BattleModeData | undefined) {\n    if (!data) {\n        return \"\"\n    }\n\n    if (SimpleCoordsEquals(data.start, hexagon)) return \"active start\"\n    if (data.end && SimpleCoordsEquals(data.end, hexagon)) return \"active end\"\n    if (data.range && data.range.some(coord => SimpleCoordsEquals(coord, hexagon))) return \"active trail\"\n    return \"inactive\"\n}\n\nexport function click(hexagon: SimpleCoords, data: BattleModeData | undefined) {\n    if (!data) {\n        return\n    }\n\n    releaseHormone(BattleModeEnd, hexagon)\n}","import { css, html, LitElement } from \"lit-element\";\nimport { useState } from \"lit-element-state-decoupler\";\nimport { useReceptor } from \"organismus\";\nimport { pureLit } from \"pure-lit\";\nimport { World, WorldLoaded } from \"../../game\";\nimport { HEXAGON_WIDTH } from \"./consts\";\n\nexport default pureLit(\"world-map\", (el: LitElement) => {\n    const { getState: getWorld, publish: setWorld } = useState<World | undefined>(el, undefined)\n    useReceptor(el, WorldLoaded, setWorld)\n\n    return html`<div id=\"globe\">${\n        getWorld()?.map.map((rows, row) => \n            html`<div class=\"row ${row % 2 === 0 ? \"push\" : \"\"}\" style=\"width: calc(${HEXAGON_WIDTH * rows.length}px + 20rem)\">\n                ${rows.map((tile, col) => \n                    html`<hexagon-element \n                        .background=${tile.terrain.sprite} \n                        .elements=\"${tile.elements}\" \n                        row=\"${row}\" col=\"${col}\">\n                    </hexagon-element>`)}\n            </div>\n            `\n        )\n    }</div>`\n}, {\n    styles: css`\n    :host {\n        display:block;\n    }\n    #globe {\n        padding: 20rem;\n    }\n    .row {\n        margin-bottom: -41px;\n        white-space: nowrap;\n    }\n    .push {\n        margin-left: 60px;\n    }`\n})","import { css, html } from \"lit-element\";\nimport { pureLit } from \"pure-lit\";\nimport { sprite } from \"../styles\";\n\nexport const name = \"building-mill\"\n\ntype Props = {\n    team?: string\n}\n\nexport default pureLit(name, ({ team }: Props) => {\n    return html`<div style=\"background-image:url('/assets/windmill_complete_${team ?? \"none\"}.png'\"></div>`\n},\n{\n    styles: [\n        sprite,\n        css`\n        div {\n            width: 80%;\n            height: 80%;\n        }\n        `\n    ],\n    defaults: {\n        team: undefined\n    }\n})","import { html, css } from \"lit-element\"\nimport { useState } from \"lit-element-state-decoupler\"\nimport { useReceptor } from \"organismus\"\nimport { LitElementWithProps, pureLit } from \"pure-lit\"\nimport { TurnAccepted } from \"../../game/world/events\"\nimport { inactive, sprite } from \"../styles\"\n\nexport const name = \"building-castle-small\"\n\ntype Props = {\n    team: string\n}\n\nexport default pureLit(name, (el: LitElementWithProps<Props>) => {\n    const { getState, publish } = useState(el, \"\")\n    useReceptor(el, TurnAccepted, publish)\n    return html`<div class=\"${getState() === el.team ? \"active\" : \"inactive\"}\" style=\"background-image:url('/assets/castle_small_${el.team}.png'\"></div>`\n},\n{\n    styles: [\n        sprite,\n        inactive,\n        css`\n        :host {\n            filter: hue-rotate(0deg);\n        }\n        `\n    ],\n    defaults: {\n        team: \"\",\n        row: undefined,\n        col: undefined\n    }\n})","import { Resources } from \"../world\";\nimport { costs as knightCosts } from \"./knights/Knight\";\nimport { costs as wagonCosts } from \"./wagon/Wagon\";\n\nconst resources: Resources = {\n    hay: 0,\n    iron: 0,\n    grain: 0,\n    log: 0,\n    stone: 0\n}\n\nexport default {\n    wagon: wagonCosts,\n    knight: knightCosts,\n    iron: () => ({...resources, stone: 4, log: 2, grain: 1 }),\n    castle_medium: () => ({...resources, log: 500, grain: 500, stone: 500 }),\n    castle_large: () => ({...resources, stone: 1000, iron: 1000, grain: 1000 }),\n}","import { css, html } from \"lit-element\";\nimport { useState } from \"lit-element-state-decoupler\";\nimport { releaseHormone, useReceptor } from \"organismus\";\nimport { LitElementWithProps, pureLit } from \"pure-lit\";\nimport { Player, Resources } from \"../../game\";\nimport costs from \"../../game/player/costs\";\nimport {\n  KnightCreated,\n  PlayerUpdate,\n  WagonCreated,\n} from \"../../game/world/events\";\n\ntype Props = {\n  selected: {\n    payload: { team: string };\n    col: number;\n    row: number;\n  };\n};\n\nconst style = css`\n  :host {\n    display: block;\n    background-image: url(\"/assets/sidebar/bg.png\");\n    background-repeat: no-repeat;\n    padding: 15px;\n    background-size: 100% 100%;\n  }\n  .container {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: auto;\n    column-gap: 10px;\n    row-gap: 15px;\n    margin: 15px;\n  }\n  building-castle-small {\n    position: relative;\n    display: block;\n    width: 4em;\n    height: 4em;\n  }\n  h3 {\n    color: var(--colorMain);\n    text-align: center;\n    margin-top: 0;\n  }\n  resource-counter {\n    display: grid;\n    grid-template-columns: 1fr;\n    font-size: 1rem;\n  }\n  .enough {\n    color: var(--colorMain);\n  }\n  .lack {\n    color: var(--colorHighlight);\n  }\n`;\n\nconst costList = (resources: Resources, costs: Resources) => {\n  return html`\n    ${costs.hay > 0\n      ? html`<resource-counter\n          count=\"${costs.hay}\"\n          class=\"${resources.hay >= costs.hay ? \"enough\" : \"lack\"}\"\n        >\n          <resource-hay></resource-hay>\n        </resource-counter>`\n      : html``}\n    ${costs.grain > 0\n      ? html`<resource-counter\n          count=\"${costs.grain}\"\n          class=\"${resources.grain >= costs.grain ? \"enough\" : \"lack\"}\"\n        >\n          <resource-grain></resource-grain>\n        </resource-counter>`\n      : html``}\n    ${costs.log > 0\n      ? html`<resource-counter\n          count=\"${costs.log}\"\n          class=\"${resources.log >= costs.log ? \"enough\" : \"lack\"}\"\n        >\n          <resource-log></resource-log>\n        </resource-counter>`\n      : html``}\n    ${costs.stone > 0\n      ? html`<resource-counter\n          count=\"${costs.stone}\"\n          class=\"${resources.stone >= costs.stone ? \"enough\" : \"lack\"}\"\n        >\n          <resource-stone></resource-stone>\n        </resource-counter>`\n      : html``}\n    ${costs.iron > 0\n      ? html`<resource-counter\n          count=\"${costs.iron}\"\n          class=\"${resources.iron >= costs.iron ? \"enough\" : \"lack\"}\"\n        >\n          <resource-iron></resource-iron>\n        </resource-counter>`\n      : html``}\n  `;\n};\n\nexport default pureLit(\n  \"sidebar-castle\",\n  (el: LitElementWithProps<Props>) => {\n    const {\n      selected: {\n        payload: { team },\n        row,\n        col,\n      },\n    } = el;\n    const { getState: getCurrentPlayer, publish: setCurrentPlayer } = useState<\n      Player | undefined\n    >(el, undefined);\n    useReceptor(el, PlayerUpdate, setCurrentPlayer);\n    const { resources } = getCurrentPlayer() ?? ({ resources: {} } as Player);\n    return html`<building-castle-small team=\"${team}\"></building-castle-small>\n      <h3>Bauen</h3>\n      <div class=\"container\">\n        <button-image\n          height=\"35px\"\n          src=\"/assets/knight_${team}.png\"\n          @click=${async () =>\n            await releaseHormone(KnightCreated, { team, row, col })}\n        >\n          ${costList(resources, costs.knight())}\n        </button-image>\n        <button-image\n          height=\"35px\"\n          src=\"/assets/wagon_${team}.png\"\n          @click=${async () =>\n            await releaseHormone(WagonCreated, { team, row, col })}\n        >\n          ${costList(resources, costs.wagon())}\n        </button-image>\n        <button-image height=\"35px\" src=\"/assets/resources/iron.png\">\n          ${costList(resources, costs.iron())}\n        </button-image>\n        <button-image height=\"35px\" src=\"/assets/castle_medium_${team}.png\">\n          ${costList(resources, costs.castle_medium())}\n        </button-image>\n        <button-image height=\"35px\" src=\"/assets/castle_large_${team}.png\">\n          ${costList(resources, costs.castle_large())}\n        </button-image>\n      </div>`;\n  },\n  {\n    styles: [style],\n    defaults: {\n      selected: {\n        payload: {\n          team: \"\",\n        },\n\n        col: 0,\n        row: 0,\n      },\n    },\n  }\n);\n","export const asNumber = (number: Number) => {\n    return parseInt(number.toString(), 10)\n}","import { css, html } from \"lit-element\";\nimport { releaseHormone } from \"organismus\";\nimport { LitElementWithProps, pureLit } from \"pure-lit\";\nimport { FigherAsset } from \"../../game\";\nimport { BattleModeActivate, MoveModeActivate } from \"../../game/world/events\";\nimport { asNumber } from \"../../math/number\";\n\ntype Props = {\n    selected : { \n        payload: FigherAsset\n        col: number\n        row: number\n    }\n}\n\nconst style = css`\n    :host {\n        display: block;\n        background-image: url('/assets/sidebar/bg.png');\n        background-size: 100% 100%;\n        background-repeat: no-repeat;\n        padding: 15px;\n    }\n    .container {\n        display: grid;\n        grid-template-areas: \n            \"knight knight health health health\"\n            \"knight knight stats stats stats\"\n            \"knight knight move attack fortify\";\n        grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n        column-gap: 10px;\n        row-gap: 15px;\n        margin: 15px;\n    }\n    button {\n        cursor: pointer;\n    }\n    #knight {\n        grid-area: knight;\n    }\n    #health {\n        grid-area: health;\n    }\n    #attack {\n        grid-area: attack;\n    }\n    #stats {\n        grid-area: stats;\n    }\n    img {\n        width: 100%;\n    }\n    h3 {\n        color: var(--colorMain)\n    }\n`\nexport default pureLit(\"sidebar-knight\", (_: LitElementWithProps<Props>) => {\n    const { selected: { payload, row, col } } = _;\n    const {health, actions} = payload\n    const start = {\n        row: asNumber(row),\n        col: asNumber(col)\n    }\n    return html`\n    <h3>Ritter</h3>\n    <div class=\"container\">\n        <img id=\"knight\" src=\"/assets/knight_${payload.team}.png\">\n        <loading-bar id=\"health\" width=\"${(health.current / health.max) * 100}%\"></loading-bar>\n        <div id=\"stats\">\n            <strong>Leben</strong> ${health.current} von ${health.max} \n            <strong>Aktionen:</strong> ${actions.current} von ${actions.max}\n        </div>\n        <button ?disabled=${actions.current < 1} id=\"move\" @click=${() => releaseHormone(MoveModeActivate, { asset: { ...payload }, start })}>🦵</button>\n        <button ?disabled=${actions.current < 1} id=\"attack\" @click=${() => releaseHormone(BattleModeActivate, { asset: { ...payload }, start })}\">⚔</button>\n        <button ?disabled=${actions.current < 1} id=\"fortify\">🏰</button>\n    </div>`\n},\n    {\n        styles: [style],\n        props: [\n            { \"selected\" : {type: Object}}\n        ]\n    })","import { css, html } from \"lit-element\";\nimport { releaseHormone } from \"organismus\";\nimport { LitElementWithProps, pureLit } from \"pure-lit\";\nimport { FigherAsset } from \"../../game\";\nimport { MoveModeActivate } from \"../../game/world/events\";\nimport { asNumber } from \"../../math/number\";\n\ntype Props = {\n    selected : { \n        payload: FigherAsset\n        col: number\n        row: number\n    }\n}\n\nconst style = css`\n    :host {\n        display: block;\n        background-image: url('/assets/sidebar/bg.png');\n        background-size: 100% 100%;\n        background-repeat: no-repeat;\n        padding: 15px;\n    }\n    .container {\n        display: grid;\n        grid-template-areas: \n            \"wagon wagon health health health\"\n            \"wagon wagon stats stats stats\"\n            \"wagon wagon move attack fortify\";\n        grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n        column-gap: 10px;\n        row-gap: 15px;\n        margin: 15px;\n    }\n    button {\n        cursor: pointer;\n    }\n    #knight {\n        grid-area: knight;\n    }\n    #health {\n        grid-area: health;\n    }\n    #attack {\n        grid-area: attack;\n    }\n    #stats {\n        grid-area: stats;\n    }\n    img {\n        width: 100%;\n    }\n    h3 {\n        color: var(--colorMain)\n    }\n`\nexport default pureLit(\"sidebar-wagon\", (_: LitElementWithProps<Props>) => {\n    const { selected: { payload, row, col } } = _;\n    const {health, actions} = payload\n    const start = {\n        row: asNumber(row),\n        col: asNumber(col)\n    }\n    return html`\n    <h3>Wagen</h3>\n    <div class=\"container\">\n        <img id=\"wagon\" src=\"/assets/wagon_${payload.team}.png\">\n        <loading-bar id=\"health\" width=\"${(health.current / health.max) * 100}%\"></loading-bar>\n        <div id=\"stats\">\n            <strong>Leben</strong> ${health.current} von ${health.max} \n            <strong>Aktionen:</strong> ${actions.current} von ${actions.max}\n        </div>\n        <button ?disabled=${actions.current < 1} id=\"move\" title=\"Move\" @click=${() => releaseHormone(MoveModeActivate, { asset: { ...payload }, start })}>🦵</button>\n        <button ?disabled=${actions.current < 1} id=\"load\" title=\"Load/Unload\">📦</button>\n    </div>`\n},\n    {\n        styles: [style],\n        props: [\n            { \"selected\" : {type: Object}}\n        ]\n    })","import { html } from \"lit-element\";\nimport { releaseHormone, useReceptor } from \"organismus\";\nimport { pureLit } from \"pure-lit\";\nimport {useState} from \"lit-element-state-decoupler\"\nimport { ItemSelected, SelectedItem } from \"../../game/world/events\";\n\nimport \"./selectedCastle\"\nimport \"./selectedKnight\"\nimport \"./selectedWagon\"\nimport { Position } from \"../../math/position\";\nimport { buildings, player } from \"..\";\nimport { SidebarLoaded } from \"../../game\";\nimport { useOnce } from \"lit-element-effect\";\n\ntype SelectionState = {\n    dirty: boolean\n    position?: Position\n    elements: {item: string, payload?: unknown}[]\n}\n\nconst newState = (element: { row: number, col: number, item: string, payload?: unknown } | undefined) => ({\n    position: element ? new Position(element?.row, element?.col) : undefined,\n    elements: element ? [{item: element.item, payload: element.payload}] : [],\n    dirty: false\n})\n\nexport default pureLit(\"controls-sidebar\", (el) => {\n    const { getState: getSelectedElement, publish: setSelectedElement } = useState<SelectedItem<unknown> | undefined>(el, undefined)\n    useReceptor(el, ItemSelected, setSelectedElement)\n    const selectedElement = getSelectedElement()\n    const {getState, publish} = useState<SelectionState>(el, newState(selectedElement))\n    const current = getState()\n    if (!current.dirty && selectedElement && new Position(selectedElement.row, selectedElement.col).equals(current.position)) {\n        publish({ \n            ...current, \n            elements: [...current.elements, {item: selectedElement.item, payload: selectedElement.payload}],\n            dirty: selectedElement.item === \"hexagon\"\n        })\n    } else {\n        publish(newState(selectedElement))\n    }\n\n    useOnce(el, () => {\n        setTimeout(() => {\n            releaseHormone(SidebarLoaded)\n        }, 1)\n    })\n\n    return html`\n        ${getState().elements.map(element => {\n            switch (element.item) {\n                case buildings.castleSmall.name:\n                    return html`<sidebar-castle \n                        .selected=\"${{row: getState().position?.row, col: getState().position?.col, payload: element.payload}}\">\n                    </sidebar-castle>`\n                case player.knight.name:\n                    return html`<sidebar-knight\n                        .selected=\"${{row: getState().position?.row, col: getState().position?.col, payload: element.payload}}\">\n                    </sidebar-knight>`\n                case player.wagon.name:\n                    return html`<sidebar-wagon\n                        .selected=\"${{row: getState().position?.row, col: getState().position?.col, payload: element.payload}}\">\n                    </sidebar-wagon>`\n                default:\n                    case buildings.castleSmall.name:\n                    return html``\n            }\n        })}\n    `\n})","/** @type Array<Node> */\nexport const cachedWrappers = [];\n\n/**\n * Creates a wrapper as a direct child of `<body>` to put the tested element into.\n * Need to be in the DOM to test for example `connectedCallback()` on elements.\n *\n * @param {Element} [parentNode]\n * @returns {Element} wrapping node\n */\nexport function fixtureWrapper(parentNode = document.createElement('div')) {\n  document.body.appendChild(parentNode);\n  cachedWrappers.push(parentNode);\n  return parentNode;\n}\n\n/**\n * Cleans up all defined fixtures by removing the actual wrapper nodes.\n * Common usecase is at the end of each test.\n */\nexport function fixtureCleanup() {\n  if (cachedWrappers) {\n    cachedWrappers.forEach(wrapper => {\n      document.body.removeChild(wrapper);\n    });\n  }\n  cachedWrappers.length = 0; // reset it like this as we can't reassign it\n}\n","import { html as litHtml } from 'lit-html/lit-html.js';\n\nexport { render } from 'lit-html/lit-html.js';\n\n/**\n * This is a wrapper around lit-html that supports dynamic strings to be added as a preprocessing\n * step, before a template is passed to lit's html function.\n * A dynamic string will be evaluated one time (on init) and passed to lit-html as being\n * part of the static string.\n *\n * WARNING: do not use in production!!! has a huge performance penalty as every string is\n * different from lit-htmls perspective so a new tag is created every time.\n *\n * A valid use case for this would be to create dynamic tag names.\n *\n * @example:\n * const tag = unsafeStatic('my-tag');\n * html`<${tag} prop=\"${prop}\"></${tag>`\n * // will in turn calls lit-html html function as:\n * html`<my-tag prop=\"${prop}\"></my-tag>`\n *\n * @param {TemplateStringsArray} strings Static Parts\n * @param {Array.<any>} values Dynamic Parts\n * @returns {import('lit-html').TemplateResult}\n */\nexport function html(strings, ...values) {\n  const newVal = []; // result values to be passed on to lit-html\n  const newStr = []; // result strings to be passed on to lit-html\n\n  if (values.length === 0) {\n    return litHtml(strings, ...values);\n  }\n\n  const isDynamicProp = p => p && p.d && typeof p.d === 'string' && Object.keys(p).length === 1;\n  const addToCurrentString = add => {\n    newStr[newStr.length - 1] = newStr[newStr.length - 1] + add;\n  };\n\n  // Create the result arrays\n  values.forEach((string, index) => {\n    if (index === 0) {\n      newStr.push(strings[0]); // this is either ''(if tagged starts with value) or string\n    }\n    // Situation 1 : dynamic string\n    const p = values[index]; // potential dynamic string\n    if (isDynamicProp(p)) {\n      addToCurrentString(p.d);\n      addToCurrentString(strings[index + 1]);\n    } else {\n      // Situation 2: no dynamic string, just push string and value\n      newVal.push(p); // a 'real' value\n      newStr.push(strings[index + 1]);\n    }\n  });\n  // Return lit template\n  // TODO: this is the reason it's not performant TemplateStringsArray needs to be always exactly\n  //   the same => e.g. would require specific caching\n  // @ts-ignore\n  return litHtml(newStr, ...newVal);\n}\n\nexport function unsafeStatic(options) {\n  return {\n    d: options,\n  };\n}\n","import { TemplateResult } from 'lit-html';\n\nexport const isIterable = object => object != null && typeof object[Symbol.iterator] === 'function';\n\nfunction isValidNonIterableRenderArg(x) {\n  return (\n    x instanceof TemplateResult ||\n    x instanceof Node ||\n    typeof x === 'number' ||\n    typeof x === 'boolean' ||\n    typeof x === 'string'\n  );\n}\n\nexport function isValidRenderArg(x) {\n  return isIterable(x) ? [...x].every(isValidNonIterableRenderArg) : isValidNonIterableRenderArg(x);\n}\n\n/**\n * Node#nodeType enum\n * @readonly\n * @enum {number}\n */\nexport const NODE_TYPES = Object.freeze({\n  ELEMENT_NODE: 1,\n  TEXT_NODE: 3,\n  COMMENT_NODE: 8,\n  DOCUMENT_FRAGMENT_NODE: 11,\n});\n","const appliedClassMixins = new WeakMap();\n\n/** Vefify if the Mixin was previously applyed\n * @private\n * @param {function} mixin      Mixin being applyed\n * @param {object} superClass   Class receiving the new mixin\n * @returns {boolean}\n */\nfunction wasMixinPreviouslyApplied(mixin, superClass) {\n  let klass = superClass;\n  while (klass) {\n    if (appliedClassMixins.get(klass) === mixin) {\n      return true;\n    }\n    klass = Object.getPrototypeOf(klass);\n  }\n  return false;\n}\n\n/** Apply each mixin in the chain to make sure they are not applied more than once to the final class.\n * @export\n * @param {function} mixin      Mixin to be applyed\n * @returns {object}            Mixed class with mixin applied\n */\nexport function dedupeMixin(mixin) {\n  return superClass => {\n    if (wasMixinPreviouslyApplied(mixin, superClass)) {\n      return superClass;\n    }\n    const mixedClass = mixin(superClass);\n    appliedClassMixins.set(mixedClass, mixin);\n    return mixedClass;\n  };\n}\n","/**\n * Cache class that allows to search in a cache hierarchy.\n * @template T, Q\n */\nexport class Cache {\n  /**\n   * Creates a Cache instance\n   * @param {Cache} [parent]\n   */\n  constructor(parent) {\n    this._parent = parent;\n    this._cache = new Map();\n  }\n\n  /**\n   * Returns a boolean indicating whether an element with the specified key exists or not.\n   *\n   * @param {T} key - The key of the element to test for presence in the Cache object.\n   * @return {boolean}\n   */\n  has(key) {\n    return !!(this._cache.has(key) || (this._parent && this._parent._cache.has(key)));\n  }\n\n  /**\n   * Adds or updates an element with a specified key and a value to a Cache object.\n   *\n   * @param {T} key - The key of the element to add to the Cache object.\n   * @param {Q} value - The value of the element to add to the Cache object.\n   * @return {Cache<T, Q>} the cache object\n   */\n  set(key, value) {\n    this._cache.set(key, value);\n\n    return this;\n  }\n\n  /**\n   * Returns a specified element from a Map object. If the value that is associated to the provided key is an\n   * object, then you will get a reference to that object and any change made to that object will effectively modify\n   * it inside the Map object.\n   *\n   * @param {T} key - The key of the element to return from the Cache object.\n   * @return {Q}\n   */\n  get(key) {\n    return this._cache.get(key) || (this._parent && this._parent._cache.get(key));\n  }\n}\n","/**\n * Global counter to scope the custom elements\n *\n * @type {number}\n */\nlet counter = Math.round(Math.random() * 100000);\n\n/**\n * Allowed tag name chars\n *\n * @type {string}\n */\nconst chars = `-|\\\\.|[0-9]|[a-z]`;\n\n/**\n * Regular expression to check if a value is a valid tag name\n *\n * @type {RegExp}\n */\nconst tagRegExp = new RegExp(`[a-z](${chars})*-(${chars})*`);\n\n/**\n * Checks if the tag name is valid\n *\n * @param {string} tag\n * @returns {boolean}\n */\nconst isValid = tag => tagRegExp.exec(tag) !== null;\n\n/**\n * Checks if the tag is already registered\n *\n * @param {string} name\n * @param {CustomElementRegistry} registry\n * @returns {boolean}\n */\nconst isTagRegistered = (name, registry) => !!registry.get(name);\n\n/**\n * Given a tag name scopes it with a number suffix\n *\n * @param {string} tagName\n * @param {CustomElementRegistry} registry\n * @returns {string} scoped tag name\n */\nconst incrementTagName = (tagName, registry) => {\n  const newTagName = `${tagName}-${(counter += 1)}`;\n\n  if (isTagRegistered(newTagName, registry)) {\n    return incrementTagName(tagName, registry);\n  }\n\n  return newTagName;\n};\n\n/**\n * Creates a unique scoped tag name\n *\n * @exports\n * @param {string} tagName - tag name to scope\n * @param {CustomElementRegistry} registry\n * @returns {string} scoped tag name\n */\nexport function createUniqueTag(tagName, registry = customElements) {\n  if (!isValid(tagName)) {\n    throw new Error('tagName is invalid');\n  }\n\n  return incrementTagName(tagName, registry);\n}\n","/**\n * The global cache for tag names\n *\n * @type {WeakMap<typeof HTMLElement, string>}\n */\nconst globalTagsCache = new WeakMap();\n\n/**\n * Adds a tag to the global tags cache\n *\n * @param {string} tag\n * @param {typeof HTMLElement} klass\n */\nexport const addToGlobalTagsCache = (tag, klass) => globalTagsCache.set(klass, tag);\n\n/**\n * Gets a tag from the global tags cache\n *\n * @exports\n * @param {typeof HTMLElement} klass\n * @returns {undefined|string}\n */\nexport const getFromGlobalTagsCache = klass => globalTagsCache.get(klass);\n","import { createUniqueTag } from './createUniqueTag.js';\nimport { getFromGlobalTagsCache, addToGlobalTagsCache } from './globalTagsCache.js';\n\n/**\n * Checks if klass is a subclass of HTMLElement\n *\n * @param {typeof HTMLElement} klass\n * @returns {boolean}\n */\nconst extendsHTMLElement = klass => Object.prototype.isPrototypeOf.call(HTMLElement, klass);\n\n/**\n * Defines a custom element\n *\n * @param {string} tagName\n * @param {typeof HTMLElement} klass\n * @param {CustomElementRegistry} registry\n */\nconst defineElement = (tagName, klass, registry = customElements) => {\n  addToGlobalTagsCache(tagName, klass);\n  registry.define(tagName, class extends klass {});\n};\n\n/**\n * Stores a lazy element in the cache to be used in future\n *\n * @param {string} tagName\n * @param {CustomElementRegistry} registry\n * @param {import('./Cache.js').Cache<string, string>} tagsCache\n * @returns {string}\n */\nconst storeLazyElementInCache = (tagName, registry, tagsCache) => {\n  const tag = createUniqueTag(tagName, registry);\n\n  if (!tagsCache) {\n    throw new Error('Lazy scoped elements requires the use of tags cache');\n  }\n\n  tagsCache.set(tagName, tag);\n\n  return tag;\n};\n\n/**\n * Define a scoped custom element storing the scoped tag name in the cache\n *\n * @param {string} tagName\n * @param {typeof HTMLElement} klass\n * @param {import('./Cache.js').Cache<string, string>} tagsCache\n * @returns {string}\n */\nconst defineElementAndStoreInCache = (tagName, klass, tagsCache) => {\n  const registry = customElements;\n\n  if (!extendsHTMLElement(klass)) {\n    return storeLazyElementInCache(tagName, registry, tagsCache);\n  }\n\n  if (klass === customElements.get(tagName)) {\n    addToGlobalTagsCache(tagName, klass);\n\n    return tagName;\n  }\n\n  const tag = createUniqueTag(tagName, registry);\n  // @ts-ignore\n  // we extend it just in case the class has been defined manually\n  defineElement(tag, klass, registry);\n\n  return tag;\n};\n\n/**\n * Gets a scoped tag name from the cache or generates a new one and defines the element if needed\n *\n * @exports\n * @param {string} tagName\n * @param {typeof HTMLElement} klass\n * @param {import('./Cache.js').Cache<string, string>} tagsCache\n * @returns {string}\n */\nexport function registerElement(tagName, klass, tagsCache = undefined) {\n  const tag =\n    getFromGlobalTagsCache(klass) ||\n    (tagsCache && tagsCache.get(tagName)) ||\n    defineElementAndStoreInCache(tagName, klass, tagsCache);\n\n  return tag;\n}\n\n/**\n * Defines a lazy element\n *\n * @param {string} tagName\n * @param {typeof HTMLElement} klass\n * @param {import('./Cache.js').Cache<string, string>} tagsCache\n */\nexport function defineScopedElement(tagName, klass, tagsCache) {\n  const tag = tagsCache.get(tagName);\n\n  if (tag) {\n    if (customElements.get(tag) === undefined) {\n      defineElement(tag, klass, customElements);\n    }\n  } else {\n    tagsCache.set(tagName, registerElement(tagName, klass, tagsCache));\n  }\n}\n","import { registerElement } from './registerElement.js';\nimport { Cache } from './Cache.js';\n\n/**\n * @typedef {import('./types').ScopedElementsMap} ScopedElementsMap\n */\n\n/**\n * Allowed tag name chars\n *\n * @type {string}\n */\nconst chars = `-|\\\\.|[0-9]|[a-z]`;\n\n/**\n * Regular Expression to find a custom element tag\n *\n * @type {RegExp}\n */\nconst re = new RegExp(`<\\\\/?([a-z](${chars})*-(${chars})*)`, 'g');\n\n/**\n * The global cache of processed string arrays\n *\n * @type {Cache<TemplateStringsArray, TemplateStringsArray>}\n */\nconst globalCache = new Cache();\n\n/**\n * Find custom element tags in the string\n *\n * @param {string} str\n * @returns {RegExpExecArray[]}\n */\nconst matchAll = str => {\n  const matches = [];\n  let result;\n  // eslint-disable-next-line no-cond-assign\n  while ((result = re.exec(str)) !== null) {\n    matches.push(result);\n  }\n\n  return matches;\n};\n\n/**\n * Transforms a string array into another one with resolved scoped elements and caches it for future references\n *\n * @param {TemplateStringsArray} strings\n * @param {ScopedElementsMap} scopedElements\n * @param {Cache<TemplateStringsArray, TemplateStringsArray>} templateCache\n * @param {Cache<string, string>} tagsCache\n * @returns {TemplateStringsArray}\n */\nconst transformTemplate = (strings, scopedElements, templateCache, tagsCache) => {\n  const transformedStrings = strings.map(str => {\n    let acc = str;\n    const matches = matchAll(str);\n\n    for (let i = matches.length - 1; i >= 0; i -= 1) {\n      const item = matches[i];\n      const [block, tagName] = item;\n      const tag = registerElement(tagName, scopedElements[tagName], tagsCache);\n      const start = item.index + block.length - tagName.length;\n      const end = start + tagName.length;\n      const isClosingTag = block.indexOf('</') === 0;\n\n      acc =\n        acc.slice(0, start) +\n        (isClosingTag ? tag : `${tag} data-tag-name=\"${tagName}\"`) +\n        acc.slice(end);\n    }\n\n    return acc;\n  });\n\n  // @ts-ignore\n  // noinspection JSCheckFunctionSignatures\n  templateCache.set(strings, transformedStrings);\n\n  // @ts-ignore\n  // noinspection JSValidateTypes\n  return transformedStrings;\n};\n\n/**\n * Obtains the cached strings array with resolved scoped elements or creates it\n *\n * @exports\n * @param {TemplateStringsArray} strings\n * @param {ScopedElementsMap} scopedElements\n * @param {import('./Cache.js').Cache<TemplateStringsArray, TemplateStringsArray>} templateCache\n * @param {import('./Cache.js').Cache<string, string>} tagsCache\n * @returns {TemplateStringsArray}\n */\nexport function transform(strings, scopedElements, templateCache = globalCache, tagsCache) {\n  return (\n    templateCache.get(strings) ||\n    transformTemplate(strings, scopedElements, templateCache, tagsCache)\n  );\n}\n","import { templateCaches } from 'lit-html/lib/template-factory.js';\nimport { marker, Template } from 'lit-html/lib/template.js';\n\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\n// @ts-ignore\nconst { ShadyCSS } = window;\n\nif (typeof ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof ShadyCSS.prepareTemplateDom === 'undefined') {\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = scopeName => result => {\n  const cacheKey = getTemplateCacheKey(result.type, scopeName);\n  let templateCache = templateCaches.get(cacheKey);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap(),\n      keyString: new Map(),\n    };\n    templateCaches.set(cacheKey, templateCache);\n  }\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n  const key = result.strings.join(marker);\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    const element = result.getTemplateElement();\n    if (compatibleShadyCSSVersion) {\n      ShadyCSS.prepareTemplateDom(element, scopeName);\n    }\n    template = new Template(result, element);\n    templateCache.keyString.set(key, template);\n  }\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n};\n","/* eslint-disable no-use-before-define */\nimport { TemplateResult } from 'lit-html';\nimport { dedupeMixin } from '@open-wc/dedupe-mixin';\nimport { Cache } from './Cache.js';\nimport { transform } from './transform.js';\nimport { defineScopedElement, registerElement } from './registerElement.js';\nimport { shadyTemplateFactory } from './shadyTemplateFactory.js';\n\n/**\n * @typedef {import('./types').ScopedElementsMixin} ScopedElementsMixin\n * @typedef {import('./types').ScopedElementsMap} ScopedElementsMap\n * @typedef {import(\"lit-element\").LitElement} LitElement\n * @typedef {import('lit-html/lib/shady-render').ShadyRenderOptions} ShadyRenderOptions\n * @typedef {function(TemplateResult, Element|DocumentFragment|ShadowRoot, ShadyRenderOptions): void} RenderFunction\n */\n\n/**\n * Template caches\n *\n * @type {WeakMap<Function, Cache<TemplateStringsArray, TemplateStringsArray>>}\n */\nconst templateCaches = new WeakMap();\n\n/**\n * Retrieves or creates a templateCache for a specific key\n *\n * @param {Function} key\n * @returns {Cache<TemplateStringsArray, TemplateStringsArray>}\n */\nconst getTemplateCache = key => {\n  if (!templateCaches.has(key)) {\n    // @ts-ignore\n    templateCaches.set(key, new Cache(templateCaches.get(key.constructor)));\n  }\n\n  return templateCaches.get(key);\n};\n\n/**\n * Tags caches\n *\n * @type {WeakMap<object, Cache<string, string>>}\n */\nconst tagsCaches = new WeakMap();\n\n/**\n * Retrieves or creates a tagsCache for a specific key\n * @param {object} key\n * @returns {Cache<string, string>}\n */\nconst getTagsCache = key => {\n  if (!tagsCaches.has(key)) {\n    tagsCaches.set(key, new Cache(tagsCaches.get(key.constructor)));\n  }\n\n  return tagsCaches.get(key);\n};\n\n/**\n * Transforms an array of TemplateResults or arrays into another one with resolved scoped elements\n *\n * @param {ReadonlyArray} items\n * @param {ScopedElementsMap} scopedElements\n * @param {Cache<TemplateStringsArray, TemplateStringsArray>} templateCache\n * @param {Cache<string, string>} tagsCache\n * @returns {ReadonlyArray}\n */\nconst transformArray = (items, scopedElements, templateCache, tagsCache) =>\n  items.map(value => {\n    if (value instanceof TemplateResult) {\n      return transformTemplate(value, scopedElements, templateCache, tagsCache);\n    }\n\n    if (Array.isArray(value)) {\n      return transformArray(value, scopedElements, templateCache, tagsCache);\n    }\n\n    return value;\n  });\n\n/**\n * Transforms a TemplateResult into another one with resolved scoped elements\n *\n * @param {TemplateResult} template\n * @param {ScopedElementsMap} scopedElements\n * @param {Cache<TemplateStringsArray, TemplateStringsArray>} templateCache\n * @param {Cache<string, string>} tagsCache\n * @returns {TemplateResult}\n */\nconst transformTemplate = (template, scopedElements, templateCache, tagsCache) =>\n  new TemplateResult(\n    transform(template.strings, scopedElements, templateCache, tagsCache),\n    transformArray(template.values, scopedElements, templateCache, tagsCache),\n    template.type,\n    template.processor,\n  );\n\n/**\n * Gets an instance of the ScopedElementsTemplateFactory\n *\n * @param {string} scopeName\n * @param {ScopedElementsMap} scopedElements\n * @param {Cache<TemplateStringsArray, TemplateStringsArray>} templateCache\n * @param {Cache<string, string>} tagsCache\n * @returns {function(any): any}\n */\nconst scopedElementsTemplateFactory = (\n  scopeName,\n  scopedElements,\n  templateCache,\n  tagsCache,\n) => template => {\n  const newTemplate = transformTemplate(template, scopedElements, templateCache, tagsCache);\n\n  return shadyTemplateFactory(scopeName)(newTemplate);\n};\n\n/** @type {ScopedElementsMixin} */\nconst ScopedElementsMixinImplementation = superclass =>\n  class ScopedElementsHost extends superclass {\n    /**\n     * Obtains the scoped elements definitions map\n     *\n     * @returns {ScopedElementsMap}\n     */\n    static get scopedElements() {\n      return {};\n    }\n\n    /** @override */\n    static render(template, container, options) {\n      if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n      }\n      const { scopeName, eventContext } = options;\n\n      const templateCache = getTemplateCache(eventContext);\n      const tagsCache = getTagsCache(eventContext);\n      const { scopedElements } = this;\n\n      return super.render(template, container, {\n        ...options,\n        templateFactory: scopedElementsTemplateFactory(\n          scopeName,\n          scopedElements,\n          templateCache,\n          tagsCache,\n        ),\n      });\n    }\n\n    /**\n     * Defines a scoped element\n     *\n     * @param {string} tagName\n     * @param {typeof HTMLElement} klass\n     */\n    defineScopedElement(tagName, klass) {\n      return defineScopedElement(tagName, klass, getTagsCache(this));\n    }\n\n    /**\n     * Returns a scoped tag name\n     *\n     * @deprecated Please, use the instance method instead of the static one. This static method is not able to\n     * obtain the tagName of lazy defined elements, while the instance one is.\n     * @param {string} tagName\n     * @returns {string|undefined}\n     */\n    static getScopedTagName(tagName) {\n      // @ts-ignore\n      const klass = this.scopedElements[tagName];\n\n      return klass\n        ? registerElement(tagName, klass, getTagsCache(this))\n        : getTagsCache(this).get(tagName);\n    }\n\n    /**\n     * Returns a scoped tag name\n     *\n     * @param {string} tagName\n     * @returns {string|undefined}\n     */\n    getScopedTagName(tagName) {\n      // @ts-ignore\n      const klass = this.constructor.scopedElements[tagName];\n\n      return klass\n        ? registerElement(tagName, klass, getTagsCache(this))\n        : getTagsCache(this).get(tagName);\n    }\n  };\n\nexport const ScopedElementsMixin = dedupeMixin(ScopedElementsMixinImplementation);\n","import { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { html, LitElement, TemplateResult } from 'lit-element';\nimport { isIterable } from './lib.js';\n\n/** @typedef {import('@open-wc/scoped-elements').ScopedElementsMap} ScopedElementsMap */\n\nconst transform = template => {\n  if (isIterable(template)) {\n    return [...template].map(v => transform(v));\n  }\n\n  if (template instanceof TemplateResult) {\n    return html(template.strings, ...template.values);\n  }\n\n  return template;\n};\n\n/**\n * Regarding the @ts-expect-error, it is caused by having '& typeof ScopedElementsHost' on ScopedElementsMixin.\n * This type intersection is necessary though, in order to access static props of the mixin. For example:\n *\n * static get scopedElements() {\n *   return {\n *     ...super.scopedElements, // <-- this will error without '& typeof ScopedElementsHost'\n *   }\n * }\n *\n * However, a new type error is created --> Base constructors must all have the same return type.ts(2510)\n * But this can be ignored, and then at least you do get the super static props typed properly.\n */\n// @ts-ignore https://github.com/microsoft/TypeScript/issues/40110 , not using expect-error, because in some TS versions it does not throw\nclass ScopedElementsTestWrapper extends ScopedElementsMixin(LitElement) {\n  static get properties() {\n    return {\n      scopedElements: { type: Object },\n      template: { type: Object },\n    };\n  }\n\n  constructor() {\n    super();\n\n    /** @type {ScopedElementsMap} */\n    this.scopedElements = {};\n\n    /** @type {import('./litFixture').LitHTMLRenderable} */\n    // eslint-disable-next-line no-unused-expressions\n    this.template;\n  }\n\n  firstUpdated(_changed) {\n    super.firstUpdated(_changed);\n\n    Object.keys(this.scopedElements).forEach(key =>\n      // @ts-ignore\n      this.defineScopedElement(key, this.scopedElements[key]),\n    );\n  }\n\n  render() {\n    return transform(this.template);\n  }\n}\n\n/**\n * Obtains a unique tag name for the test wrapper\n * @param {number} [counter=0]\n * @returns {string}\n */\nconst getWrapperUniqueName = (counter = 0) => {\n  const tag = `scoped-elements-test-wrapper-${counter}`;\n\n  if (customElements.get(tag) !== undefined) {\n    return getWrapperUniqueName(counter + 1);\n  }\n\n  return tag;\n};\n\nconst wrapperTagName = getWrapperUniqueName();\n\n// @ts-ignore\ncustomElements.define(wrapperTagName, ScopedElementsTestWrapper);\n\n/**\n * Wraps the template inside a scopedElements component\n *\n * @param {import('./litFixture').LitHTMLRenderable} template\n * @param {ScopedElementsMap} scopedElements\n * @returns {TemplateResult}\n */\nexport function getScopedElementsTemplate(template, scopedElements) {\n  const strings = [\n    `<${wrapperTagName} .scopedElements=\"`,\n    '\" .template=\"',\n    `\"></${wrapperTagName}>`,\n  ];\n\n  // @ts-ignore\n  return html(strings, scopedElements, template);\n}\n","import { fixtureCleanup } from './fixtureWrapper.js';\n\nexport { fixture, fixtureSync } from './fixture-no-side-effect.js';\n\n/**\n * This registers the fixture cleanup as a side effect\n */\ntry {\n  // we should not assume that our users load mocha types globally\n  // @ts-ignore\n  if ('afterEach' in window) {\n    // @ts-ignore\n    afterEach(() => {\n      fixtureCleanup();\n    });\n  }\n  // @ts-ignore\n  if ('teardown' in window) {\n    // @ts-ignore\n    teardown(() => {\n      fixtureCleanup();\n    });\n  }\n} catch (error) {\n  /* do nothing */\n}\n","import { html } from \"@open-wc/testing-helpers\"\nimport { css } from \"lit-element\"\nimport { useState } from \"lit-element-state-decoupler\"\nimport { releaseHormone, useReceptor } from \"organismus\"\nimport { pureLit } from \"pure-lit\"\nimport { FigherAsset } from \"../../game\"\nimport { Dice } from \"../../game/player/dices/dice\"\nimport { BattleThrowDice, ModalBattleOpen } from \"../../game/world/events\"\n\nexport default pureLit(\"modal-battle\", (el) => {\n    const { getState, publish } = useState<ModalBattleOpen | undefined>(el, undefined)\n    const { getState: getSelectedDice, publish: setSelectedDice } = useState<Dice | undefined>(el, undefined)\n    useReceptor(el, ModalBattleOpen, publish)\n    return html`\n   <modal-window \n        .open=${getState() ? true : false} \n        preventClose>\n        <h1 slot=\"header\">Kampf beginnt!</h1>\n        <div class=\"body\">\n        ${getState()?.attacker.map(_ => {\n            const player = _ as FigherAsset;\n            return html`\n                    <div>\n                        <fighter-info \n                            .player=${player} \n                            row=\"${getState()!.location.row}\" \n                            col=\"${getState()!.location.col}\">\n                        </fighter-info>\n                        <h3>Wähle deine Waffe</h3>\n                        <div class=\"dices\">\n                            <dice-selector .dices=\"${player.dices}\" @select=\"${(dice: CustomEvent<Dice>) => setSelectedDice(dice.detail)}\"></dice-selector>\n                        </div>\n                    </div>\n                `\n        })\n        }${getState()?.defender.map(_ => {\n            const player = _ as FigherAsset;\n            return html`\n                    <div>\n                        <fighter-info \n                            .player=${player} \n                            row=\"${getState()!.location.row}\" \n                            col=\"${getState()!.location.col}\">\n                        </fighter-info>\n                    </div>\n                `\n        })\n        }\n        </div>\n        <p slot=\"footer\">\n            <button @click=\"${() => releaseHormone(BattleThrowDice, {\n                attacker: {\n                    asset: getState()?.attacker[0],\n                    dices: [getSelectedDice()]\n                },\n                defender: getState()?.defender[0],                \n                location: {row: getState()!.location.row, col: getState()!.location.col},\n            })}\" ?disabled=\"${getSelectedDice() === undefined}\">Würfeln</button>\n        </p>\n    </modal-window>`\n}, {\n    styles: [\n        css`\n        .body {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            grid-template-rows: auto;\n        }\n        .body > * {\n            display: block;\n        }\n        .player-info {\n            display: grid;\n            grid-template-columns: 1fr 3fr;\n        }\n        .sprite {\n            height: 140px;\n        }\n        .health-bar {\n            background-image: url('/assets/knight/health-bg.png');\n            background-size: contain;\n            background-repeat: no-repeat;\n            height: 15px;\n        }\n        .health-bar .current {\n            background-image: url('/assets/knight/health.png');\n            background-size: contain;\n            background-repeat: no-repeat;\n            height: 15px;\n        }\n        `\n    ]\n})","import { html } from \"@open-wc/testing-helpers\"\nimport { css } from \"lit-element\"\nimport { useState } from \"lit-element-state-decoupler\"\nimport { useReceptor } from \"organismus\"\nimport { pureLit } from \"pure-lit\"\nimport { FigherAsset } from \"../../game\"\nimport { ModalDiceResultOpen } from \"../../game/world/events\"\n\nexport default pureLit(\"modal-dice-result\", (el) => {\n    const { getState, publish } = useState<ModalDiceResultOpen | undefined>(el, undefined)\n    useReceptor(el, ModalDiceResultOpen, publish)\n    return html`\n   <modal-window \n        .open=${getState() ? true : false} \n        @close=${() => publish(undefined)}>\n        <h1 slot=\"header\">Gewürfelt!</h1>\n        <div class=\"body\">\n        ${getState()?.attacker.map(_ => {\n            const player = _ as FigherAsset;\n            return html`\n                    <div class=\"attacker\">\n                        <fighter-info \n                            .player=${player} \n                            row=\"${getState()!.location.row}\" \n                            col=\"${getState()!.location.col}\">\n                        </fighter-info>\n                    </div>\n                `\n        })\n        }${getState()?.defender.map(_ => {\n            const player = _ as FigherAsset;\n            return html`\n                    <div class=\"defender\">\n                        <fighter-info \n                            .player=${player} \n                            row=\"${getState()!.location.row}\" \n                            col=\"${getState()!.location.col}\">\n                        </fighter-info>\n                    </div>\n                `\n        })\n        }\n        ${getState() ? html`<dice-roll class=\"dice\" result=\"${getState()!.result}\"></dice-roll>` : html``}\n        </div>\n\n        <p slot=\"footer\">\n        </p>\n    </modal-window>`\n}, {\n    styles: [\n        css`\n        .body {\n            display: grid;\n            grid-template-areas: \n                \"attacker defender\"\n                \"dice dice\";\n        }\n        .body > * {\n            display: block;\n        }\n        .attacker {\n            grid-area: attacker;\n        }\n        .defender {\n            grid-area: defender;\n        }\n        .dice {\n            grid-area: dice;\n        }\n        `\n    ]\n})","import { css, html } from \"lit-element\"\nimport { useState } from \"lit-element-state-decoupler\"\nimport { useReceptor } from \"organismus\"\nimport { pureLit } from \"pure-lit\"\nimport { MillTaken, MillTakeover } from \"../../game/world/events\"\n\nexport default pureLit(\"modal-mill-taken\", (el) => {\n    const { getState, publish } = useState<MillTaken | undefined>(el, undefined)\n    useReceptor(el, MillTakeover, publish)\n    return html`\n    <modal-window \n         .open=${getState() ? true : false} \n         @close=${() => publish(undefined)}>\n         <h1 slot=\"header\">Mühle übernommen!</h1>\n         <div class=\"body\">\n            <div class=\"by\">\n                <fighter-info \n                    .player=${getState()?.by} \n                    .row=\"${getState()?.location.row}\" \n                    .col=\"${getState()?.location.col}\">\n                </fighter-info>\n            </div>\n            <div class=\"mills\">\n                <building-mill .team=\"${getState()?.transfered.to}\" class=\"after\"></building-mill>\n                <building-mill .team=\"${getState()?.transfered.from}\" class=\"before\"></building-mill>\n            </div>\n         </div>\n         <p slot=\"footer\">\n         </p>\n     </modal-window>`\n}, {\n    styles: css`\n    .body {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n    }\n\n    .mills {\n        position: relative;\n        justify-self: center;\n    }\n    .after {\n        z-index: 1;\n    }\n    .before {\n        z-index: 2;\n        animation: fadeOut 5s 1;\n        animation-fill-mode: forwards;\n    }\n    \n    @keyframes fadeOut {\n        0%   {\topacity: 1;\t}\n        100%   {\topacity: 0;\t}\n    }\n    `\n})","import { html } from \"@open-wc/testing-helpers\"\nimport { css } from \"lit-element\"\nimport { useState } from \"lit-element-state-decoupler\"\nimport { releaseHormone, useReceptor } from \"organismus\"\nimport { pureLit } from \"pure-lit\"\nimport { PlayerNoActionsLeft, TurnPlayerComplete } from \"../../game/world/events\"\n\nexport default pureLit(\"modal-no-more-turns\", (el) => {\n    const { getState, publish } = useState<boolean | undefined>(el, undefined)\n    useReceptor(el, PlayerNoActionsLeft, publish)\n    return html`\n   <modal-window \n        .open=${getState() ? true : false} \n        preventClose>\n        <h1 slot=\"header\">Keine Aktionen übrig.</h1>\n        <div class=\"body\">\n            Du hast keine Aktionen mehr übrig. Willst du weiter geben, oder noch rum schauen?\n        </div>\n        <p slot=\"footer\">\n            <button @click=\"${() => (releaseHormone(TurnPlayerComplete), publish(false))}\">Zug beenden</button>\n            <button @click=\"${() => publish(false)}\">Noch rumschauen</button>\n        </p>\n    </modal-window>`\n}, {\n    styles: [\n        css`\n        .body {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            grid-template-rows: auto;\n        }\n        .body > * {\n            display: block;\n        }\n        .player-info {\n            display: grid;\n            grid-template-columns: 1fr 3fr;\n        }\n        .sprite {\n            height: 140px;\n        }\n        .health-bar {\n            background-image: url('/assets/knight/health-bg.png');\n            background-size: contain;\n            background-repeat: no-repeat;\n            height: 15px;\n        }\n        .health-bar .current {\n            background-image: url('/assets/knight/health.png');\n            background-size: contain;\n            background-repeat: no-repeat;\n            height: 15px;\n        }\n        `\n    ]\n})","import { html } from \"lit-element\"\nimport { pureLit } from \"pure-lit\"\n\nexport * from \"./Battle\"\nexport * from \"./DiceResult\"\nexport * from \"./MillTaken\"\nexport * from \"./NoMoreTurns\"\n\nexport default pureLit(\"modals-all\", () => {\n    return html`\n    <modal-no-more-turns></modal-no-more-turns>\n    <modal-battle></modal-battle>\n    <modal-dice-result></modal-dice-result>\n    <modal-mill-taken></modal-mill-taken>`\n})","import { html } from \"@open-wc/testing-helpers\";\nimport { css } from \"lit-element\";\nimport { useState } from \"lit-element-state-decoupler\";\nimport { releaseHormone, useReceptor } from \"organismus\";\nimport { pureLit } from \"pure-lit\";\nimport { Asset, isMoveableAsset, Team } from \"../../game\";\nimport { UpdateAllPlayerElements, TurnAccepted, TurnPlayerComplete } from \"../../game/world/events\";\nimport { spriteGridFactory } from \"../sprites\";\nimport { sidebar, sidebarFor } from \"../styles\";\n\nexport default pureLit(\"footer-element\", (el) => {\n    const {getState: getTeam, publish: setTeam} = useState<Team | undefined>(el, undefined)\n    const {getState: getAssets, publish: setAssets} = useState<Asset[]>(el, [])\n    useReceptor(el, TurnAccepted, setTeam)\n    useReceptor(el, UpdateAllPlayerElements, setAssets)\n    return html`<footer class=\"${getTeam()!}\">\n    <div class=\"main \">\n        ${spriteGridFactory(getAssets()\n            .sort((a, b) => a.name.localeCompare(b.name))\n            .filter(asset => !isMoveableAsset(asset) || asset.actions.current > 0), \n            \"width: 10vh; height: 10vh;\")}\n    </div>\n    <div class=\"action\">\n        <button-pure @click=\"${() => releaseHormone(TurnPlayerComplete)}\">\n            <text-block type=\"paragraph\" size=\"x-large\">⌛</text-block> Zug beenden\n        </button-pure>\n    </div>\n</footer>`\n}, {\n    styles: [\n        sidebar,\n        sidebarFor(css`footer .main`),\n        css`\n    footer {\n        min-height: 10vh;\n        max-height: 10vh;\n        display: grid;\n        grid-template-columns: 3fr 1fr;\n        grid-template-rows: auto;\n        grid-template-areas: \n            \"main action\";\n        padding-left: 5vw;\n        padding-right: 5vw;\n    }\n    footer .main {\n        grid-area: main;\n        transition: background-color 2s;\n        min-height: 10vh;\n        max-height: 10vh;\n        overflow-x: auto;\n    }\n    footer.red {\n        background-color: #A95C44;\n    }\n    footer.green {\n        background-color: #178044;\n    }\n    footer .action {\n        grid-area: action;\n        place-self: center;\n    }`]\n})","import { css } from \"lit-element\";\n\nexport const baseResource = css`\n  :host {\n    display: inline-block;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    width: 3vh;\n    height: 3vh;\n  }\n`;\n","import { css, html } from \"lit-element\";\nimport { pureLit } from \"pure-lit\";\nimport { baseResource } from \"./base\";\n\nexport default pureLit(\n  \"resource-grain\",\n  () => {\n    return html``;\n  },\n  {\n    styles: [\n      css`\n        :host {\n          background-image: url(\"/assets/resources/grain.png\");\n        }\n      `,\n      baseResource,\n    ],\n  }\n);\n","import { css, html } from \"lit-element\";\nimport { pureLit } from \"pure-lit\";\nimport { baseResource } from \"./base\";\n\nexport default pureLit(\"resource-stone\", () => {\n    return html``\n}, {\n    styles: [\n      css`\n        :host {\n          background-image: url(\"/assets/resources/stone.png\");\n        }\n      `,\n      baseResource,\n    ],\n})","import { css, html } from \"lit-element\";\nimport { pureLit } from \"pure-lit\";\nimport { baseResource } from \"./base\";\n\nexport default pureLit(\"resource-iron\", () => {\n    return html``\n}, {\n    styles: [\n      css`\n        :host {\n          background-image: url(\"/assets/resources/iron.png\");\n        }\n      `,\n      baseResource,\n    ],\n})","import { css, html } from \"lit-element\";\nimport { pureLit } from \"pure-lit\";\nimport { baseResource } from \"./base\";\n\nexport default pureLit(\"resource-log\", () => {\n    return html``\n}, {\n    styles: [\n      css`\n        :host {\n          background-image: url(\"/assets/resources/log.png\");\n        }\n      `,\n      baseResource,\n    ],\n})","import { css, html } from \"lit-element\";\nimport { pureLit } from \"pure-lit\";\nimport { baseResource } from \"./base\";\n\nexport default pureLit(\n  \"resource-hay\",\n  () => {\n    return html``;\n  },\n  {\n    styles: [\n      css`\n        :host {\n          background-image: url(\"/assets/resources/hay.png\");\n        }\n      `,\n      baseResource,\n    ],\n  }\n);\n","import { css, html } from \"lit-element\";\nimport { pureLit } from \"pure-lit\";\n\ntype Props = {\n    count: number\n}\n\nexport default pureLit(\"resource-counter\", ({count}: Props) => {\n    return html`\n        <slot></slot>\n        ${count}\n    `\n}, {\n    styles: [\n        css`\n        :host {\n            font-size: 4vh;\n        }\n        `\n    ],\n    props: [{\n        count: {type: Number}\n    }]\n})","import { html } from \"@open-wc/testing-helpers\";\nimport { css } from \"lit-element\";\nimport { useState } from \"lit-element-state-decoupler\";\nimport { useReceptor } from \"organismus\";\nimport { pureLit } from \"pure-lit\";\nimport { Player, Team } from \"../../game\";\nimport { PlayerUpdate, TurnAccepted } from \"../../game/world/events\";\n\nimport '../resources'\n\nexport default pureLit(\"header-element\", (el) => {\n    const {getState: getCurrentTeam, publish: setCurrentTeam} = useState<Team | undefined>(el, undefined)\n    const {getState: getCurrentPlayer, publish: setCurrentPlayer} = useState<Player | undefined>(el, undefined)\n    useReceptor(el, TurnAccepted, setCurrentTeam)\n    useReceptor(el, PlayerUpdate, setCurrentPlayer)\n    const player = getCurrentPlayer() ?? { resources: {}} as Player\n    return html`<header class=\"${getCurrentTeam()!}\">\n        <resource-counter count=\"${player.resources.hay}\">\n            <resource-hay></resource-hay>\n        </resource-counter>\n        <resource-counter count=\"${player.resources.grain}\">\n            <resource-grain></resource-grain>\n        </resource-counter>\n        <resource-counter count=\"${player.resources.stone}\">\n            <resource-stone></resource-stone>\n        </resource-counter>\n        <resource-counter count=\"${player.resources.iron}\">\n            <resource-iron></resource-iron>\n        </resource-counter>\n        <resource-counter count=\"${player.resources.log}\">\n            <resource-log></resource-log>\n        </resource-counter>\n    </header>`\n}, {\n    styles: css`\n    header {\n        min-height: 5vh;\n        max-height: 5vh;\n        background-size: 200% 100%;\n        transition: background-position 2s;\n        background-image: \n            linear-gradient(to right, #178044 0%, white 50%, #A95C44 100%);\n    }\n    .green {\n        background-position: 0% 0%;\n    }\n    .red {\n        background-position: 100% 0%;\n    }`\n})","import { html, css } from \"lit-element\"\nimport { releaseHormone } from \"organismus\"\nimport { pureLit } from \"pure-lit\"\nimport { load } from \"../game\"\nimport { Abort } from \"../game/world/events\"\nimport { sidebar, sidebarFor } from \"./styles\"\n\nexport * from \"./elements\"\nexport * from \"./player/\"\nexport * from \"./map/\"\nexport * as buildings from \"./buildings/\"\nexport * as player from \"./player/\"\nexport * from \"./sidebar/sidebar\"\nexport * from \"./modals\"\nexport * from \"./footer\"\nexport * from \"./header\"\n\ndocument.querySelector(\"body\")?.addEventListener(\"keyup\", function(e) {\n    if (e.key === \"Escape\") { \n       releaseHormone(Abort, true)\n   }\n})\n\nexport default pureLit(\"the-mill\", () => {\n    load({ rows: 10, cols: 10 })\n    return html`\n    <header-element>header</header-element>\n    <world-map></world-map>\n    <controls-sidebar>sidebar</controls-sidebar>\n    <footer-element>\n    </footer-element>\n    <modals-all></modals-all>\n    `\n}, {\n    styles: [\n        sidebar,\n        sidebarFor(css`world-map`),\n        sidebarFor(css`controls-sidebar`),\n        css`\n    header-element {\n        grid-area: header;\n    }\n    world-map {\n        grid-area: main;\n        min-height: 85vh;\n        max-height: 85vh;\n        overflow: auto;\n        scroll-behavior: smooth;\n        background-color: #87CEFA;\n    }\n    \n    controls-sidebar {\n        grid-area: sidebar;\n        display: block;\n        min-height: 85vh;\n        max-height: 85vh;\n        overflow-x: auto;\n        padding: 0 1rem;\n    }\n    footer-element {\n        grid-area: footer;\n    }\n    \n    :host {\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n        grid-template-rows: auto;\n        grid-template-areas: \n            \"header header header header header\"\n            \"main main main main sidebar\"\n            \"footer footer footer footer footer\";\n        }\n    `]\n})"],"names":["isCEPolyfill","window","customElements","undefined","polyfillWrapFlushCallback","removeNodes","container","start","end","n","nextSibling","removeChild","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","Template","[object Object]","result","element","this","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","nodeType","hasAttributes","attributes","count","i","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","insertBefore","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","removeNodesFromTemplate","template","nextActiveIndexInTemplateParts","nodeIndex","removeCount","nodesToRemoveInTemplate","currentRemovingNode","has","forEach","countNodes","startIndex","directives","WeakMap","isDirective","o","noChange","nothing","TemplateInstance","processor","options","__parts","setValue","commit","fragment","cloneNode","importNode","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","policy","trustedTypes","createPolicy","createHTML","commentMarker","TemplateResult","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","value","getHTML","innerHTML","isPrimitive","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","v","text","t","setAttribute","_getValue","committer","directive","NodePart","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","BooleanAttributePart","Error","PropertyCommitter","super","single","PropertyPart","eventOptionsSupported","capture","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","__options","getOptions","event","call","templateCache","templateCaches","get","stringsArray","keyString","Map","set","key","join","getTemplateElement","defaultTemplateProcessor","prefix","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","Set","prepareTemplateStyles","renderedDOM","add","templateElement","styles","querySelectorAll","condensedStyle","style","textContent","templates","from","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","firstChild","querySelector","nativeShadow","removes","JSCompiler_renameProperty","prop","_obj","defaultConverter","Boolean","Object","JSON","stringify","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","UpdatingElement","HTMLElement","initialize","observedAttributes","finalize","_classProperties","p","attr","_attributeNameForProperty","_attributeToPropertyMap","hasOwnProperty","superProperties","getPrototypeOf","k","_ensureClassProperties","noAccessor","prototype","descriptor","getPropertyDescriptor","defineProperty","oldValue","requestUpdateInternal","configurable","enumerable","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","fromAttribute","toAttribute","_updateState","_updatePromise","Promise","res","_enableUpdatingResolver","_changedProperties","_saveInstanceProperties","constructor","_v","_instanceProperties","enableUpdating","_attributeToProperty","ctor","attrValue","_propertyValueToAttribute","propName","getPropertyOptions","_propertyValueFromAttribute","shouldRequestUpdate","_valueHasChanged","_reflectingProperties","_hasRequestedUpdate","_enqueueUpdate","updateComplete","performUpdate","hasUpdated","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","_propertyToAttribute","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","styleSheet","_styleSheet","replaceSync","css","reduce","acc","idx","textFromCSSResult","renderNotImplemented","LitElement","userStyles","getStyles","addStyles","reduceRight","unshift","_styles","map","cssRules","rule","_getUniqueStyles","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","adoptedStyleSheets","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","connectedCallback","styleElement","templateResult","render","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","assign","appendInto","litRender","delete","SILENT","ERROR","INFO","DEBUG","TRACE","r","error","a","trace","log","c","queue","list","d","actionDictionary","hormones","callback","keys","filter","every","m","h","readOnce","loadIfExists","defaultValue","transformation","receptors","async","u","Function","orchestrate","all","onlyIf","onTriggered","toString","some","toTypeDeclaration","object","entries","getType","toProperties","args","hasProps","declaration","defaults","registered","pureLit","define","isDefault","range","_","Cube","x","y","z","costs","other","transpose","cube","to","max","abs","distance","results","min","direction","cubeDirections","neighbor","dir","find","equals","radius","negRadius","col","row","Position","toPosition","toCoords","neigboursMaps","manhattan","euclid","SimpleCoordsEquals","b","system","neighbour","sqrt","pow","euclidPointDistance","manhattanPointDistance","prevPosition","val","parseInt","generateUUID","Date","getTime","d2","performance","now","replace","floor","SmallCastle","id","occurences","region","green","array","round","red","Mill","isDistributedSpriteSet","sprite","buildings","getRandomLocation","rows","cols","rel","number","TerrainPresets","gras","file","movementCosts","defense","desert","mud","muddyHills","forest","mountain","randomTerrain","WorldLoaded","defineHormone","StartGame","SidebarLoaded","loadPlayerAssets","team","arrayForBuildings","building","factor","nextIndex","getPlayerStartAssets","getNextElement","load","mapAssets","position","getBuildingsForMap","loadMapAssets","playerAssets","redAssets","terrain","elements","releaseHormone","teams","isPositionedAsset","asset","isMoveableAsset","actions","isFighterAsset","dices","Heapify","capacity","PrioritiesBackingArrayType","Uint32Array","_keys","_priorities","priority","parentIndex","halfLength","left","childPriority","childKey","childIndex","right","rightPriority","pos","bubbleUp","bubbleDown","toStringTag","Abort","defineSingleHormone","PlayerUpdate","RequestSelectCoords","ItemSelected","ItemMoved","KnightCreated","WagonCreated","UpdateAllPlayerElements","CheckPlayerHasActionsLeft","PlayerNoActionsLeft","HexagonUpdated","MoveModeActivate","MoveModeDeactivate","MoveModeTargetHovered","MoveModeEnd","BattleModeActivate","BattleModeActive","BattleModeEnd","BattleModeDeactivate","BattleStarted","BattleThrowDice","BattlePlayerAttacked","MillTakeover","ModalBattleOpen","ModalDiceResultOpen","TurnStarted","TurnAccepted","TurnPlayerComplete","TurnsComplete","roll","sum","dice","sides","grain","iron","hay","stone","findAllElementsFromTeam","world","findElement","deepQuerySelector","shadowRoot","hexagon","currentTurn","worldAsCube","turns","players","getActivePlayer","hasActionsLeft","current","isOnTurn","hypothalamus","on","newWorld","rowIndex","colIndex","toCube","resources","abort","playerCastle","buildings.castleSmall.name","payload","setTimeout","scrollIntoView","behavior","block","inline","getPlayer","assets","TurnComplete","tryPay","availableResources","resource","cost","knight","player.knight.name","movement","points","health","story","CreateKnight","wagon","player.wagon.name","CreateWagon","currentTeam","playerWithActionsLeft","findNextPlayerWithAction","safeNumber","moveModeState","battleModeState","isBlocked","trail","goal","frontier","cameFrom","costSoFar","visited","foundPath","path","next","neighbors","newCost","heuristic","startPosition","fromString","reverse","shortestPath","actualEnd","location","otherKnights","attacker","defender","mills","buildings.mill.name","millTaken","transfered","by","damage","hash","setLoglevel","LOGLEVEL","inactive","sidebar","sidebarFor","el","height","src","modalCoreCss","modalHeaderCss","trigger","dispatchEvent","CustomEvent","open","preventClose","exports","asUpdateableLitElement","requestUpdate","decorate","litElement","decoratedLitElement","__registered_states","updateableLitLikeElement","oldUpdated","states","reducers","state","updateDefault","inject","getState","__awaiter","thisArg","_arguments","P","generator","resolve","reject","fulfilled","step","rejected","done","then","apply","clone_1","shallowClone","subscribers","decorator_1","withState","publish","subscriber","subscribe","onChange","reducer","state_1","useState","withReducer","when","action","triggeredAction","detail","reducer_1","useReducer","modalOpen","modalSetOpen","width","useReceptor","side","previousValues","unsafeHTML","f","previousValue","__registered_effects","effects","effect","useEffect","observe","withEffect","effect_1","useOnce","doTrigger","triggers","getFilteredTriggers","none","getUpdated","setUpdated","getCurrentTeam","setCurrentTeam","spriteFactory","entry","player","cssHexagon","cssHexagonMovement","getCssClass","moveMode","battleMode","coord","movement.getCssClass","battle.getCssClass","click","movement.click","battle.click","getElements","setElements","getMovementMode","setMovementMode","getBattleMode","setBattleMode","hello","background","getWorld","setWorld","tile","wagonCosts","knightCosts","costList","selected","getCurrentPlayer","setCurrentPlayer","asNumber","newState","getSelectedElement","setSelectedElement","selectedElement","cachedWrappers","fixtureCleanup","wrapper","body","newVal","newStr","litHtml","addToCurrentString","string","isDynamicProp","freeze","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","DOCUMENT_FRAGMENT_NODE","appliedClassMixins","Cache","_parent","_cache","counter","chars","tagRegExp","incrementTagName","registry","newTagName","isTagRegistered","createUniqueTag","tag","globalTagsCache","addToGlobalTagsCache","klass","defineElement","defineElementAndStoreInCache","tagsCache","isPrototypeOf","extendsHTMLElement","storeLazyElementInCache","registerElement","getFromGlobalTagsCache","re","globalCache","transformTemplate","scopedElements","transformedStrings","matches","matchAll","isClosingTag","tagsCaches","getTagsCache","transformArray","items","transform","scopedElementsTemplateFactory","newTemplate","ScopedElementsMixin","mixin","superclass","defineScopedElement","superClass","wasMixinPreviouslyApplied","mixedClass","ScopedElementsTestWrapper","_changed","getWrapperUniqueName","wrapperTagName","afterEach","teardown","getSelectedDice","setSelectedDice","getTeam","setTeam","getAssets","setAssets","elementStyle","spriteGridFactory","sort","localeCompare","baseResource"],"mappings":"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"}